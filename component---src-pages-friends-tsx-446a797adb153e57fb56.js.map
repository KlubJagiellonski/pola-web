{"version":3,"sources":["webpack:///./src/components/Placeholder.tsx","webpack:///./src/layout/ColumnsLayout.tsx","webpack:///./src/utils/friends/index.ts","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/Card.tsx","webpack:///./src/components/friends/SingleFriend.tsx","webpack:///./src/components/friends/FriendsSection.tsx","webpack:///./src/pages/friends.tsx"],"names":["Wrapper","styled","WrapperSection","color","text","light","padding","normal","fontSize","desktopHeaderHeight","Placeholder","background","red","ColumnsLayout","div","big","Device","mobile","desktop","props","size","undefined","pageWidth","ContentColumn","fraction","hideOnMobile","getRandomFriend","friends","Math","floor","random","length","getFriendBySlug","slug","find","friend","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Button","SecondaryButton","Title","TitleSection","margin","TextInfo","Text","ButtonInfoSection","Card","title","content","buttonLabel","url","to","label","styles","ButtonThemes","ButtonFlavor","RED","small","WrapperContents","PageSection","RightColumn","LeftColumn","ImageSection","ButtonSection","ButtonWhiteRed","border","grey","ButtonRed","SingleFriend","name","description","image","page","ResponsiveImage","imageSrc","href","target","buildFriendUrl","hash","profit","id","WHITE_RED","FriendsSection","query","useQueryParams","value","StringParam","useState","setFriend","useEffect","Friends","FullWrapperInfo","FullContentInfo","UlSection","ul","secondary","WrapperInfo","Info","TitleInfo","connect","state","data","location","dispatch","useDispatch","React","LoadBrowserLocation","SelectActivePage","PageType","FRIENDS","PageLayout","SEOMetadata","pageTitle","transparencyGrey","white","urls","pola","contact"],"mappings":"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","file":"component---src-pages-friends-tsx-446a797adb153e57fb56.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { WrapperSection } from '../styles/GlobalStyle.css';\nimport { color, padding, fontSize, desktopHeaderHeight } from '../styles/theme';\n\nconst Wrapper = styled(WrapperSection)`\n  color: ${color.text.light};\n  padding: ${padding.normal};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: ${fontSize.normal};\n  font-weight: bold;\n  height: ${desktopHeaderHeight};\n\n  p {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\ninterface IPlaceholder {\n  text: string;\n}\n\nconst Placeholder: React.FC<IPlaceholder> = ({ text }) => {\n  return (\n    <Wrapper color={color.background.red}>\n      <p>{text}</p>\n    </Wrapper>\n  );\n};\n\nexport default Placeholder;\n","import styled from 'styled-components';\nimport { Device, pageWidth, padding, color } from '../styles/theme';\n\ninterface IColumnsLayout {\n  size?: 'narrow' | 'full';\n}\n\nexport const ColumnsLayout = styled.div<IColumnsLayout>`\n  display: flex;\n  flex-flow: row nowrap;\n  gap: ${padding.big};\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  @media ${Device.mobile} {\n    padding: 0 ${padding.normal};\n    flex-flow: column;\n  }\n  @media ${Device.desktop} {\n    max-width: ${(props) => (props.size === 'full' ? undefined : pageWidth)};\n    padding-bottom: ${(props) => (props.size === 'full' ? 0 : padding.normal)};\n  }\n`;\n\nexport interface IContentColumn {\n  fraction?: number;\n  hideOnMobile?: boolean;\n}\n\nexport const ContentColumn = styled.div<IContentColumn>`\n  display: flex;\n  flex-flow: column;\n  flex: 1 1 auto;\n  width: ${({ fraction }) => (fraction ? fraction + '%' : 'auto')};\n\n  @media ${Device.mobile} {\n    width: 100%;\n    display: ${(props) => (props.hideOnMobile ? 'none' : 'block')};\n  }\n`;\n","import { Friend } from '../../domain/friends';\n\nexport function getRandomFriend(friends: Friend[]) {\n  const randomNumber = Math.floor(Math.random() * friends.length);\n  return friends[randomNumber];\n}\n\nexport function getFriendBySlug(slug: string, friends: Friend[]) {\n  return friends.find((friend) => friend.slug === slug);\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ButtonThemes, ButtonFlavor } from './buttons/Button';\nimport { TitleSection, WrapperSection, Text } from '../styles/GlobalStyle.css';\nimport { color, fontSize, margin, padding } from '../styles/theme';\nimport { SecondaryButton } from './buttons/SecondaryButton';\n\nconst Wrapper = styled(WrapperSection)`\n  margin: 0;\n  padding: ${padding.big};\n`;\n\nconst Button = styled(SecondaryButton)`\n  text-transform: capitalize;\n  font-weight: bold;\n  min-width: 300px;\n`;\n\nconst Title = styled(TitleSection)`\n  text-align: center;\n  color: ${color.text.light};\n  margin-bottom: ${margin.big};\n`;\n\nconst TextInfo = styled(Text)`\n  color: ${color.text.light};\n  text-align: center;\n`;\n\nconst ButtonInfoSection = styled.div`\n  display: flex;\n  justify-content: center;\n`;\ninterface ICard {\n  title: string;\n  content: string;\n  buttonLabel: string;\n  url: string;\n}\n\nconst Card: React.FC<ICard> = ({ title, content, buttonLabel, url }) => {\n  return (\n    <Wrapper color={color.background.red}>\n      <Title>{title}</Title>\n      <TextInfo>{content}</TextInfo>\n      <ButtonInfoSection>\n        <Link to={url}>\n          <Button label={buttonLabel} styles={ButtonThemes[ButtonFlavor.RED]} fontSize={fontSize.small} />\n        </Link>\n      </ButtonInfoSection>\n    </Wrapper>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Friend } from '../../domain/friends';\nimport { hash } from '../../domain/website';\nimport { PageSection } from '../../layout/PageSection';\nimport { color, Device, fontSize, margin } from '../../styles/theme';\nimport { ResponsiveImage } from '../images/ResponsiveImage';\nimport { TitleSection, Text } from '../../styles/GlobalStyle.css';\nimport { SecondaryButton } from '../buttons/SecondaryButton';\nimport { ButtonFlavor, ButtonThemes } from '../../components/buttons/Button';\nimport { AnchorLink } from 'gatsby-plugin-anchor-links';\nimport { buildFriendUrl } from './friends-url-service';\nimport { ColumnsLayout, ContentColumn } from '../../layout/ColumnsLayout';\n\nconst WrapperContents = styled(PageSection)`\n  margin-top: ${margin.normal};\n\n  @media ${Device.mobile} {\n    padding: 0;\n  }\n`;\n\nconst RightColumn = styled(ContentColumn)`\n  flex: 1;\n  position: relative;\n`;\n\nconst LeftColumn = styled(ContentColumn)`\n  flex: 2;\n`;\n\nconst ImageSection = styled.div`\n  @media ${Device.mobile} {\n    max-height: 15em;\n    margin-bottom: ${margin.normal};\n\n    .gatsby-image-wrapper {\n      max-height: 15em;\n\n      picture {\n        img {\n          max-height: 15em;\n          width: auto !important;\n          left: 50% !important;\n          right: 50% !important;\n          transform: translateX(-50%);\n        }\n      }\n    }\n  }\n\n  @media ${Device.desktop} {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n\n    .gatsby-image-wrapper {\n      height: 100%;\n\n      picture {\n        img {\n          width: auto !important;\n          max-width: 100%;\n          height: auto !important;\n          max-height: 100%;\n          left: 50% !important;\n          right: 50% !important;\n          top: 50% !important;\n          transform: translate(-50%, -50%);\n        }\n      }\n    }\n  }\n`;\n\nconst ButtonSection = styled.div`\n  margin-top: ${margin.normal};\n  display: flex;\n  flex-direction: column;\n  gap: ${margin.small};\n`;\n\nconst Button = styled(SecondaryButton)`\n  text-transform: capitalize;\n  font-weight: bold;\n  min-width: 300px;\n`;\n\nconst ButtonWhiteRed = styled(Button)`\n  border-color: ${color.border.grey};\n`;\n\nconst ButtonRed = styled(Button)`\n  border-color: ${color.background.red};\n`;\n\nconst SingleFriend: React.FC<Friend> = ({ name, description, image, page, slug }) => {\n  return (\n    <WrapperContents>\n      <ColumnsLayout>\n        <RightColumn>\n          <ImageSection>{image && <ResponsiveImage imageSrc={image} />}</ImageSection>\n        </RightColumn>\n        <LeftColumn>\n          <TitleSection>{name}</TitleSection>\n          <Text>{description}</Text>\n          <ButtonSection>\n            <a href={page} target=\"_blank\">\n              <ButtonRed\n                label=\"Odwiedź stronę przyjaciela\"\n                styles={ButtonThemes[ButtonFlavor.RED]}\n                fontSize={fontSize.small}\n              />\n            </a>\n            {slug && (\n              <AnchorLink to={buildFriendUrl(slug, hash.friends.profit.id)}>\n                <ButtonWhiteRed\n                  label=\"Wypromuj swoją firmę\"\n                  styles={ButtonThemes[ButtonFlavor.WHITE_RED]}\n                  fontSize={fontSize.small}\n                />\n              </AnchorLink>\n            )}\n          </ButtonSection>\n        </LeftColumn>\n      </ColumnsLayout>\n    </WrapperContents>\n  );\n};\n\nexport default SingleFriend;\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Friend } from '../../domain/friends'\nimport { margin, Device } from '../../styles/theme'\nimport SingleFriend from './SingleFriend'\nimport Friends from './Friends'\nimport { hash } from '../../domain/website'\nimport { StringParam, useQueryParams } from 'use-query-params';\nimport { useState } from 'react'\nimport { getFriendBySlug } from '../../utils/friends'\n\nconst Wrapper = styled.div`\n  margin: ${margin.small} 0;\n\n  .friends_wrapper{\n    .friends_title{\n      display: none;\n    }\n  }\n\n  @media ${Device.mobile} {\n    margin: ${margin.small} 0;\n  }\n`\ninterface IFriendsSection {\n  friends?: Friend[]\n}\n\nconst FriendsSection: React.FC<IFriendsSection> = ({ friends }) => {\n  const [query] = useQueryParams({\n    value: StringParam\n  });\n  const [friend, setFriend] = useState<Friend>()\n\n  useEffect(() => {\n    if (friends && query.value) {\n      const friend = getFriendBySlug(query.value, friends);\n      if (friend != undefined) {\n        setFriend(friend);\n      }\n    }\n  }, [friends, query]);\n\n  return (\n    <Wrapper id={hash.friends.friend.id}>\n      <Friends friends={friends} />\n      {friend && friends && <SingleFriend {...friend} />}\n    </Wrapper>\n  )\n}\n\nexport default FriendsSection","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { PageLayout } from '../layout/PageLayout';\nimport SEOMetadata from '../utils/browser/SEOMetadata';\nimport { IPolaState } from '../state/types';\nimport { LoadBrowserLocation, SelectActivePage } from '../state/app/app-actions';\nimport { hash, PageType, urls } from '../domain/website';\nimport { Text, TitleSection, WrapperSection } from '../styles/GlobalStyle.css';\nimport { PageSection } from '../layout/PageSection';\nimport { margin, padding, Device, color, fontSize } from '../styles/theme';\nimport { ResponsiveImage } from '../components/images/ResponsiveImage';\nimport Placeholder from '../components/Placeholder';\nimport { Friend } from '../domain/friends';\nimport Card from '../components/Card';\nimport FriendsSection from '../components/friends/FriendsSection';\n\nconst Title = styled(TitleSection)`\n  margin: ${margin.normal} 0;\n  text-align: center;\n`;\n\nconst FullWrapperInfo = styled(WrapperSection)`\n  padding: 0 ${padding.small};\n  display: flex;\n  justify-content: center;\n`;\n\nconst FullContentInfo = styled.div`\n  width: 50%;\n\n  @media ${Device.mobile} {\n    width: 100%;\n  }\n`;\n\nconst UlSection = styled.ul`\n  color: ${color.text.secondary};\n  font-size: ${fontSize.small};\n  margin: ${margin.small};\n  padding: ${padding.small};\n`;\n\nconst WrapperInfo = styled(PageSection)`\n  display: flex;\n  padding-bottom: 0;\n  padding-top: 120px;\n  margin-top: -120px;\n\n  div {\n    flex: 1;\n  }\n\n  @media ${Device.mobile} {\n    flex-direction: column;\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nconst Info = styled(WrapperSection)`\n  padding: ${margin.normal} ${padding.big};\n  margin: ${margin.normal} 0;\n\n  @media ${Device.mobile} {\n    padding: ${margin.big} ${padding.small};\n    margin: ${margin.normal} 0;\n  }\n`;\n\nconst TitleInfo = styled(TitleSection)`\n  @media ${Device.mobile} {\n    text-align: center;\n  }\n`;\n\ninterface IFriendsPage {\n  location?: Location;\n  friends?: Friend[];\n}\n\nconst FriendsPage = (props: IFriendsPage) => {\n  const { location } = props;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.FRIENDS));\n    }\n  }, []);\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle=\"Klub przyjaciół Poli\" />\n      <Placeholder text=\"Wspieramy polskie firmy - oto Przyjaciele Poli:\" />\n      <PageSection>\n        <FriendsSection friends={props.friends} />\n      </PageSection>\n      <FullWrapperInfo color={color.background.transparencyGrey}>\n        <FullContentInfo>\n          <Title>Jak rozpoznać polską firmę?</Title>\n          <Text>\n            Można to ustalić weryfikując kilka czynników. Nasz program kierowany jest do przedsiębiorstw, które\n            spełniają poniższe kryteria:\n          </Text>\n          <UlSection>\n            <li>są zarejestrowane w Polsce;</li>\n            <li>posiadają 100% polskiego kapitału;</li>\n            <li>prowadzą produkcję na terenie naszego kraju;</li>\n            <li>tworzą wykwalifikowane miejsca pracy;</li>\n            <li>nie są częścią zagranicznego koncernu.</li>\n          </UlSection>\n          <Text>\n            Ponadto przedsiębiorstwo musi charakteryzować się nieposzlakowaną opinią na swój temat oraz aktywnie\n            angażować się w działania podejmowane na rzecz promocji patriotyzmu gospodarczego w Polsce.\n          </Text>\n        </FullContentInfo>\n      </FullWrapperInfo>\n      <WrapperInfo id={hash.friends.profit.id}>\n        <Info color={color.background.white}>\n          <TitleInfo>Czym jest Klub Przyjaciół Poli?</TitleInfo>\n          <Text>\n            Głównym celem Klubu Przyjaciół Poli jest promocja oraz wsparcie polskich przedsiębiorstw. Będzie to możliwe\n            dzięki stworzeniu silnego środowiska społeczno-biznesowego, które poprzez kooperację i wspólne działania\n            przyczyni się do popularyzacji mody na patriotyzm gospodarczy.\n          </Text>\n          <ResponsiveImage imageSrc=\"szproty.png\" />\n        </Info>\n        <Info color={color.background.transparencyGrey}>\n          <TitleInfo>Co zyskuje przyjaciel Poli?</TitleInfo>\n          <UlSection>\n            <li>Znak Towarowy Polski produkt - 100 pkt Pola</li>\n            <Text>\n              Stworzyliśmy własne oznaczenie Polski produkt - 100 pkt Pola przeznaczone wyłącznie dla produktów, które\n              uzyskały w naszym algorytmie maksymalny wynik 100 punktów. Będzie to tym samym pierwszy znak towarowy,\n              którego pojawienie się na etykiecie jest poparte merytoryczną analizą danego przedsiębiorstwa.\n            </Text>\n            <Text>\n              Głównym powodem rozszerzenia naszej działalności są doświadczenia związane z oznaczeniami funkcjonującymi\n              na polskim rynku spożywczym. W większości przypadków w sposób jednoznaczny sugerują one polskie\n              pochodzenie produktów, chociaż po zweryfikowaniu ich producentów okazuje się, że są własnością\n              zagranicznych podmiotów. Znak Polski produkt - 100 pkt Pola jest naszą odpowiedzią, która w formie\n              prostego graficznego przekazu umożliwi szybką weryfikację produktu, co będzie szczególnie ważne dla osób\n              niekorzystających z urządzeń mobilnych.\n            </Text>\n            <li> Ekspozycja informacji o firmie </li>\n            <Text>\n              Oprócz samego znaku towarowego status Przyjaciela Poli jest jednoznaczny z aktywnym udziałem w rozwoju\n              aplikacji Pola. Zabierz ja na zakupy, którą używa już ponad 750 000 użytkowników. Informacja o firmie\n              znajduje w specjalnych zakładkach w aplikacji oraz na naszej stronie internetowej, dzieki czemu każdy\n              konsument może poznać historię oraz profil działalności wszystkich współpracujących z Klubem Jagiellońskim\n              przedsiębiorstw. Dodatkowo po zeskanowaniu produktu należącego do Przyjaciela Poli użytkownik zostanie\n              poinformowany o jego specjalnym statusie.\n            </Text>\n            <li>Działalność promocyjna oraz społeczna</li>\n            <Text>\n              Wszyscy Przyjaciele Poli mają możliwość aktywnego udziału w prowadzonych przez nas kampaniach społecznych\n              oraz internetowych, mających na celu popularyzację polskich firm i patriotyzmu gospodarczego wśród\n              obywateli.\n            </Text>\n          </UlSection>\n        </Info>\n      </WrapperInfo>\n      <WrapperInfo>\n        <Card\n          title=\"Dołącz do Przyjaciół Poli\"\n          content=\"Lorem ipsum dolor sit amet.\"\n          buttonLabel=\"KONTAKT\"\n          url={urls.pola.contact}\n        />\n      </WrapperInfo>\n    </PageLayout>\n  );\n};\n\nexport default connect((state: IPolaState) => ({\n  friends: state.friends.data,\n}))(FriendsPage);\n"],"sourceRoot":""}