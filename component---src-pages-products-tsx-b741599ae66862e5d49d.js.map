{"version":3,"sources":["webpack:///./src/layout/DevelopmentPlaceholder.tsx","webpack:///./src/components/buttons/SecondaryButton.tsx","webpack:///./src/search/results-list/DynamicProductResults.tsx","webpack:///./src/pages/products.tsx"],"names":["Container","styled","div","DevelopmentPlaceholder","text","size","styles","backgroundColor","color","background","secondary","textColor","primary","textAlign","ButtonContainer","Button","border","white","Device","mobile","fontSize","tiny","SecondaryButton","label","icon","className","disabled","children","onClick","theme","e","stopPropagation","DynamicProductResults","state","phrase","pages","totalItems","onSelect","onLoadMore","loadButton","SearchStateName","LOADING","PrimaryButton","Spinner","button","ButtonThemes","ButtonFlavor","RED","SearchResultsHeader","searchState","PageSection","SearchResultsList","results","actions","MissingProductInfo","connect","app","search","location","stateName","searchResults","INITIAL","reduceToFlatProductsList","resultPages","token","nextPageToken","undefined","searchDispatcher","invokeLoadMore","selectProduct","props","dispatch","useDispatch","React","useEffect","LoadBrowserLocation","SelectActivePage","PageType","PRODUCTS","PageLayout","SEOMetadata","pageTitle","navigateTo","urls","pola","home"],"mappings":"4FAAA,+FAKMA,EAAYC,UAAOC,IAAV,wFAAGD,CAAH,8EAWFE,EAA4D,SAAC,GAAD,QAAGC,YAAH,MAAU,mBAAV,SACvE,kBAAC,IAAD,CACEC,KAAK,OACLC,OAAQ,CAAEC,gBAAiBC,IAAMC,WAAWC,UAAWC,UAAWH,IAAMJ,KAAKQ,QAASC,UAAW,WACjG,kBAACb,EAAD,KACE,4BAAKI,O,kCCrBX,+FAKMU,EAAkBb,kBAAOc,KAAV,sFAAGd,CAAH,gHAECO,IAAMQ,OAAOC,MAIxBC,IAAOC,OACDC,IAASC,MAgBbC,EAA8C,SAAC,GAQtD,IAPJC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,UACAC,EAII,EAJJA,SACApB,EAGI,EAHJA,OACAqB,EAEI,EAFJA,SACAC,EACI,EADJA,QAOA,OACE,kBAACd,EAAD,CAAiBe,MAAOvB,EAAQmB,UAAWA,EAAWG,QANpC,SAACE,GACnBA,EAAEC,mBACDL,GAAYE,GAAWA,KAIoDF,SAAUA,GACnFF,EACAD,EACAI,K,0RCvBMK,EAA0D,SAAC,GAOlE,IANJC,EAMI,EANJA,MACAC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,WAEMC,EACJN,IAAUO,IAAgBC,QACxB,kBAACC,EAAA,EAAD,CACEhB,UAAU,EACVF,KAAM,kBAACmB,EAAA,EAAD,CAASrC,OAAQ,CAAED,KAAM,GAAIG,MAAOA,IAAMoC,OAAO3B,SACvDX,OAAQuC,IAAaC,IAAaC,OAGpC,kBAACL,EAAA,EAAD,CAAenB,MAAM,iBAAiBjB,OAAQuC,IAAaC,IAAaC,KAAMnB,QAASU,IAG3F,OACE,oCACE,kBAACU,EAAA,EAAD,CAAqBd,OAAQA,EAAQE,WAAYA,EAAYa,YAAahB,IAC1E,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBC,QAASjB,EAAOC,WAAYA,EAAYC,SAAUA,EAAUgB,QAASd,IACxF,kBAACe,EAAA,EAAD,SCcOC,6BACb,SAACtB,GACC,IAAQuB,EAAgBvB,EAAhBuB,IAAKC,EAAWxB,EAAXwB,OACb,MAAO,CACLC,SAAUF,EAAIE,SACdT,YAAaQ,EAAOE,UACpBC,cACEH,EAAOE,YAAcnB,IAAgBqB,SAAWJ,EAAOE,YAAcnB,IAAgBC,QACjF,CACEP,OAAQuB,EAAOvB,OACfC,MAAO2B,YAAyBL,EAAOM,aACvC3B,WAAYqB,EAAOrB,WACnB4B,MAAOP,EAAOQ,oBAEhBC,KAGV,CACE5B,WAAY6B,IAAiBC,eAC7BC,cAAeF,IAAiBE,eAnBrBd,EA/BM,SAACe,GACpB,IAAQZ,EAAqDY,EAArDZ,SAAUT,EAA2CqB,EAA3CrB,YAAaW,EAA8BU,EAA9BV,cAAetB,EAAegC,EAAfhC,WAExCiC,EAAWC,wBASjB,OAPAC,IAAMC,WAAU,WACVhB,IACFa,EAASI,YAAoBjB,IAC7Ba,EAASK,YAAiBC,IAASC,cAEpC,IAEElB,EAMH,kBAACmB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,UAAU,wBACvB,kBAAC9E,EAAA,EAAD,CAAwBC,KAAK,oBAC7B,kBAAC,EAAD,iBACMwD,EADN,CAEE3B,MAAOgB,EACPZ,SAAUiC,EAAMD,cAChB/B,WAAYA,OAZhB4C,YAAWC,IAAKC,KAAKC,MACd","file":"component---src-pages-products-tsx-b741599ae66862e5d49d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { color } from '../styles/theme';\nimport { PageSection } from './PageSection';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 12rem;\n`;\n\ninterface IDevelopmentPlaceholder {\n  text?: string;\n}\n\nexport const DevelopmentPlaceholder: React.FC<IDevelopmentPlaceholder> = ({ text = 'Strona w budowie' }) => (\n  <PageSection\n    size=\"full\"\n    styles={{ backgroundColor: color.background.secondary, textColor: color.text.primary, textAlign: 'center' }}>\n    <Container>\n      <h2>{text}</h2>\n    </Container>\n  </PageSection>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button, IButtonTheme } from './Button';\nimport { color, Device, fontSize } from '../../styles/theme';\n\nconst ButtonContainer = styled(Button)`\n  border-radius: 20px;\n  border: 2px solid ${color.border.white};\n  font-weight: 300;\n  text-transform: uppercase;\n\n  @media ${Device.mobile} {\n    font-size: ${fontSize.tiny};\n  }\n`;\n\nexport interface ISecondaryButton {\n  label?: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  styles: IButtonTheme;\n  fontSize?: string;\n  className?: string;\n  children?: React.ReactNode;\n\n  onClick?: () => void;\n}\n\nexport const SecondaryButton: React.FC<ISecondaryButton> = ({\n  label,\n  icon,\n  className,\n  disabled,\n  styles,\n  children,\n  onClick,\n}) => {\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    !disabled && onClick && onClick();\n  };\n\n  return (\n    <ButtonContainer theme={styles} className={className} onClick={handleClick} disabled={disabled}>\n      {icon}\n      {label}\n      {children}\n    </ButtonContainer>\n  );\n};\n","import React from 'react';\nimport { PageSection } from '../../layout/PageSection';\nimport { color } from '../../styles/theme';\nimport { EAN, IProductData } from '../../domain/products';\nimport { SearchResultsList } from '../../search/results-list/SearchResultsList';\nimport { PrimaryButton } from '../../components/buttons/PrimaryButton';\nimport { ButtonThemes, ButtonFlavor } from '../../components/buttons/Button';\nimport { Spinner } from '../../components/Spinner';\nimport { SearchStateName } from '../../state/search/search-reducer';\nimport { SearchResultsHeader } from '../../search/results-list/SearchResultsHeader';\nimport { MissingProductInfo } from '../../search/results-list/MissingProductInfo';\n\ninterface IDynamicProductResults {\n  state: SearchStateName;\n  phrase: string;\n  token: string;\n  pages: IProductData[];\n  totalItems: number;\n\n  onSelect: (code: EAN) => void;\n  onLoadMore: () => void;\n}\n\nexport const DynamicProductResults: React.FC<IDynamicProductResults> = ({\n  state,\n  phrase,\n  pages,\n  totalItems,\n  onSelect,\n  onLoadMore,\n}) => {\n  const loadButton =\n    state === SearchStateName.LOADING ? (\n      <PrimaryButton\n        disabled={true}\n        icon={<Spinner styles={{ size: 20, color: color.button.white }} />}\n        styles={ButtonThemes[ButtonFlavor.RED]}\n      />\n    ) : (\n      <PrimaryButton label=\"Wczytaj więcej\" styles={ButtonThemes[ButtonFlavor.RED]} onClick={onLoadMore} />\n    );\n\n  return (\n    <>\n      <SearchResultsHeader phrase={phrase} totalItems={totalItems} searchState={state} />\n      <PageSection>\n        <SearchResultsList results={pages} totalItems={totalItems} onSelect={onSelect} actions={loadButton} />\n        <MissingProductInfo />\n      </PageSection>\n    </>\n  );\n};\n","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\n\nimport { PageLayout } from '../layout/PageLayout';\nimport SEOMetadata from '../utils/browser/SEOMetadata';\nimport { IPolaState } from '../state/types';\nimport { searchDispatcher } from '../state/search/search-dispatcher';\nimport { LoadBrowserLocation, SelectActivePage } from '../state/app/app-actions';\nimport { EAN, IProductData } from '../domain/products';\nimport { SearchStateName } from '../state/search/search-reducer';\nimport { navigateTo } from '../utils/browser';\nimport { DevelopmentPlaceholder } from '../layout/DevelopmentPlaceholder';\nimport { PageType, urls } from '../domain/website';\nimport { reduceToFlatProductsList } from '../domain/products/search-service';\nimport { DynamicProductResults } from '../search/results-list/DynamicProductResults';\n\ninterface IProductsPage {\n  location?: Location;\n  searchState: SearchStateName;\n  searchResults?: {\n    phrase: string;\n    token: string;\n    pages: IProductData[];\n    totalItems: number;\n  };\n\n  onLoadMore: () => void;\n  selectProduct: (code: EAN) => void;\n}\n\nconst ProductsPage = (props: IProductsPage) => {\n  const { location, searchState, searchResults, onLoadMore } = props;\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.PRODUCTS));\n    }\n  }, []);\n\n  if (!searchResults) {\n    navigateTo(urls.pola.home);\n    return null;\n  }\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle=\"Znalezione produkty\" />\n      <DevelopmentPlaceholder text=\"Lista produktów\" />\n      <DynamicProductResults\n        {...searchResults}\n        state={searchState}\n        onSelect={props.selectProduct}\n        onLoadMore={onLoadMore}\n      />\n    </PageLayout>\n  );\n};\n\nexport default connect(\n  (state: IPolaState) => {\n    const { app, search } = state;\n    return {\n      location: app.location,\n      searchState: search.stateName,\n      searchResults:\n        search.stateName !== SearchStateName.INITIAL && search.stateName !== SearchStateName.LOADING\n          ? {\n              phrase: search.phrase,\n              pages: reduceToFlatProductsList(search.resultPages),\n              totalItems: search.totalItems,\n              token: search.nextPageToken,\n            }\n          : undefined,\n    };\n  },\n  {\n    onLoadMore: searchDispatcher.invokeLoadMore,\n    selectProduct: searchDispatcher.selectProduct,\n  }\n)(ProductsPage);\n"],"sourceRoot":""}