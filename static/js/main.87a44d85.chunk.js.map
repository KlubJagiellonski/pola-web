{"version":3,"sources":["pages/serach/SearchModal.css.js","components/ModalTitle.css.js","components/ModalIcon.js","components/ModalTitle.js","components/ModalProgressiveBar.css.js","components/ModalProgressiveBar.js","components/ModalCheckbox.js","pages/serach/SearchModal.js","deviceId.js","pages/serach/Search.css.js","pages/serach/Search.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","BigSection","SmallSection","Section","WrapperTitle","Title","p","SearchModalIcon","Icon","onClick","style","color","fontSize","cursor","SearchModalTitle","title","close","ModalIcon","FaTimesCircle","ProgressBarStyled","ProgressBar","size","ProgressBarStyledLabel","label","ModalProgressiveBar","now","suffix","className","variant","ModalCheckbox","dataTestId","value","for","data-testid","type","disabled","checked","SearchModal","data","ModalTitle","name","plScore","margin","plCapital","marginTop","plWorkers","plRnD","plRegistered","plNotGlobEnt","description","randomDeviceId","len","result","i","asciiNumber","Math","floor","random","String","fromCharCode","randomString","getCurrentDeviceId","deviceId","localStorage","getItem","setItem","SearchButton","Button","SearchFormControl","FormControl","Search","useState","ean","setEan","setData","isOpen","setOpen","closeModal","handleSubmit","e","a","preventDefault","length","axios","get","params","code","device_id","resp","console","log","width","onSubmit","InputGroup","onChange","target","placeholder","Append","Modal","show","onHide","aria-labelledby","Body","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2oBAEO,IAAMA,EAAUC,IAAOC,IAAV,KAKPC,EAAaF,IAAOC,IAAV,KAIVE,EAAeH,IAAOC,IAAV,KAIZG,EAAUJ,IAAOC,IAAV,K,sRCbb,IAAMI,EAAeL,IAAOC,IAAV,KAOZK,EAAQN,IAAOO,EAAV,KCEHC,EATS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/B,OACE,kBAACD,EAAD,CACEC,QAASA,EACTC,MAAO,CAAEC,MAAO,UAAWC,SAAU,GAAIC,OAAQ,c,QCWxCC,EAXU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjC,OACE,kBAACZ,EAAD,KACE,kBAACa,EAAD,CAAWT,KAAMU,IAAeT,QAASO,IACzC,kBAACX,EAAD,KACGU,K,2ZCRF,IAAMjB,EAAUC,IAAOC,IAAV,KAKPmB,EAAoBpB,YAAOqB,IAAPrB,CAAH,KAChB,kBAAmB,QAAnB,EAAEsB,KAAyB,OAAS,UAIrCC,EAAyBvB,IAAOwB,MAAV,KCDpBC,EATa,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,OAAQL,EAAU,EAAVA,KACzC,OACE,kBAAC,EAAD,KACE,kBAACC,EAAD,eAA4BG,EAA5B,YAAmCC,IACnC,kBAACP,EAAD,CAAmBE,KAAMA,EAAMM,UAAU,eAAeC,QAAQ,SAASH,IAAKA,MCIrEI,EATO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,MAAOhB,EAAY,EAAZA,MAC1C,OACE,2BACE,2BAAOiB,IAAKF,EAAYG,cAAaH,EAAYI,KAAK,WAAWC,UAAQ,EAACC,QAAmB,MAAVL,IACnF,2BAAOC,IAAKF,GAAaf,KCuEhBsB,EAvEK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,MAEzB,OACI,kBAAClB,EAAD,KACI,kBAACyC,EAAD,CACIxB,MAAOuB,EAAKE,KACZxB,MAAOA,IAEI,2BAAdsB,EAAKE,MACF,oCACI,kBAACvC,EAAD,KACI,kBAAC,EAAD,CACIwB,IAAKa,EAAKG,QACVf,OAAQ,MACRL,KAAK,SAGb,kBAACnB,EAAD,KACI,kBAACC,EAAD,KACI,uBAAGO,MAAO,CAAEgC,OAAQ,cAApB,uCACA,kBAAC,EAAD,CACIjB,IAAKa,EAAKK,UACVjB,OAAQ,IACRL,KAAK,WAGb,yBAAKX,MAAO,CAACkC,UAAW,KACpB,kBAACzC,EAAD,KACI,kBAAC,EAAD,CACI2B,WAAW,aACXC,MAAOO,EAAKO,UACZ9B,MAAM,wBAGd,kBAACZ,EAAD,KACI,kBAAC,EAAD,CACI2B,WAAW,SACXC,MAAOO,EAAKQ,MACZ/B,MAAM,2CAGd,kBAACZ,EAAD,KACI,kBAAC,EAAD,CACI2B,WAAW,gBACXC,MAAOO,EAAKS,aACZhC,MAAM,6BAGd,kBAACZ,EAAD,KACI,kBAAC,EAAD,CACI2B,WAAW,kBACXC,MAAOO,EAAKU,aACZjC,MAAM,6DASlB,kBAACZ,EAAD,KACKmC,EAAKW,iB,iBCvDrBC,EAAiB,WAC1B,MAAM,OAAN,OAdwB,SAACC,GAEzB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAKE,IAAK,CAC1B,IAAIC,EAAcC,KAAKC,MAAsB,GAAhBD,KAAKE,UAE9BL,GADAE,GAAe,GAAKA,GAAe,EACjBI,OAAOC,aAAaL,EAAc,IAElCI,OAAOC,aAAaL,EAAc,IAG5D,OAAOF,EAIOQ,CAAa,MAGlBC,EAAqB,WAC9B,IAAIC,EAAWC,aAAaC,QAAQ,aAKpC,OAJgB,MAAZF,IACAA,EAAUZ,IACVa,aAAaE,QAAQ,YAAaH,IAE/BA,G,ggCCpBJ,IAAMI,EAAenE,YAAOoE,IAAPpE,CAAH,KAwBZqE,EAAoBrE,YAAOsE,IAAPtE,CAAH,K,QC2CfuE,EA9DA,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACZC,EADY,KACPC,EADO,OAEKF,mBAAS,IAFd,mBAEZjC,EAFY,KAENoC,EAFM,OAGOH,oBAAS,GAHhB,mBAGZI,EAHY,KAGJC,EAHI,KAMbC,EAAa,kBAAMD,GAAQ,IAE3BE,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,yDACnBD,EAAEE,mBACET,EAAIU,OAAS,GAFE,0CAIOC,IAAMC,IAAI,eAC5B,CACEC,OAAQ,CACNC,KAAMd,EACNe,UAAW1B,OARJ,OAIN2B,EAJM,OAHGZ,GAAQ,GAgBtBF,EAAQc,EAAKlD,MAbF,kDAeXmD,QAAQC,IAAR,MAfW,0DAAH,sDAoBlB,OACE,yBAAKhF,MAAO,CAAEiF,MAAO,SACnB,0BAAMjF,MAAO,CAAEiF,MAAO,MAAOjD,OAAQ,UAAYkD,SAAUd,GACzD,kBAACe,EAAA,EAAD,CAAYlE,UAAU,uBACpB,kBAACyC,EAAD,CACElC,KAAK,OACLH,MAAOyC,EACPsB,SAAU,SAAAf,GAAC,OAAIN,EAAOM,EAAEgB,OAAOhE,QAC/BiE,YAAY,6BAEd,kBAACH,EAAA,EAAWI,OAAZ,KACE,kBAAC/B,EAAD,CAAchC,KAAK,SAASN,QAAQ,qBAClC,kBAAC,IAAD,UAKR,kBAACsE,EAAA,EAAD,CACE7E,KAAK,KACL8E,KAAMxB,EACNyB,OAAQvB,EACRwB,kBAAgB,gCAEhB,kBAACH,EAAA,EAAMI,KAAP,KACE,kBAAC,EAAD,CACEhE,KAAMA,EACNtB,MAAO6D,QCnDJ0B,MARf,WACE,OACE,6BACI,kBAAC,EAAD,QCMYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,c","file":"static/js/main.87a44d85.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const BigSection = styled.div`\n  padding: 0 30px\n`\n\nexport const SmallSection = styled.div`\n  padding: 0 45px\n`\n\nexport const Section = styled.div`\n  margin-top: 10px;\n`","import styled from \"styled-components\"\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 10px;\n`\n\nexport const Title = styled.p`\n  fontSize: 20px;\n  padding: 0 10px; \n  margin: 0;\n`","import React from 'react'\n\nconst SearchModalIcon = ({ Icon, onClick }) => {\n  return (\n    <Icon\n      onClick={onClick}\n      style={{ color: '#dc3545', fontSize: 30, cursor: 'pointer' }}\n    />\n  )\n}\n\nexport default SearchModalIcon;","import React from 'react'\nimport {  WrapperTitle, Title } from './ModalTitle.css'\nimport ModalIcon from './ModalIcon'\nimport { FaTimesCircle } from 'react-icons/fa'\n// import { RiFileCopyLine } from 'react-icons/ri'\n\nconst SearchModalTitle = ({ title, close }) => {\n  return (\n    <WrapperTitle>\n      <ModalIcon Icon={FaTimesCircle} onClick={close} />\n      <Title>\n        {title}\n      </Title>\n    </WrapperTitle>\n  )\n}\n\nexport default SearchModalTitle;","import styled from \"styled-components\"\nimport { ProgressBar } from \"react-bootstrap\"\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n`\n\nexport const ProgressBarStyled = styled(ProgressBar)`\n    height: ${({size}) => size==='big' ? '30px' : '25px'};\n    border-radius: 0;\n`\n\nexport const ProgressBarStyledLabel = styled.label`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 0;\n  bottom: 0;\n  color: white;\n`","import React from 'react'\nimport { ProgressBarStyled, ProgressBarStyledLabel, Wrapper } from './ModalProgressiveBar.css'\n\nconst ModalProgressiveBar = ({now, suffix, size}) => {\n  return (\n    <Wrapper>\n      <ProgressBarStyledLabel>{`${now} ${suffix}`}</ProgressBarStyledLabel>\n      <ProgressBarStyled size={size} className='bg-secondary' variant=\"danger\" now={now} />\n    </Wrapper>\n  )\n}\n\nexport default ModalProgressiveBar","import React from 'react'\n\nconst ModalCheckbox = ({ dataTestId, value, title }) => {\n  return (\n    <p>\n      <input for={dataTestId} data-testid={dataTestId} type='checkbox' disabled checked={value === 100} />\n      <label for={dataTestId}>{title}</label>\n    </p>\n  )\n}\n\nexport default ModalCheckbox","import React from 'react'\nimport { Wrapper, BigSection, SmallSection, Section } from './SearchModal.css'\nimport ModalTitle from './../../components/ModalTitle'\nimport ModalProgressiveBar from './../../components/ModalProgressiveBar'\nimport ModalCheckbox from './../../components/ModalCheckbox'\n\nconst SearchModal = ({ data, close }) => {\n\n    return (\n        <Wrapper>\n            <ModalTitle\n                title={data.name}\n                close={close}\n            />\n            {data.name !== \"Nieprawidłowy kod\" &&\n                <>\n                    <BigSection>\n                        <ModalProgressiveBar\n                            now={data.plScore}\n                            suffix={'pkt'}\n                            size='big'\n                        />\n                    </BigSection>\n                    <SmallSection>\n                        <Section>\n                            <p style={{ margin: '0 0 8px 0' }}>udział polskiego kapitału</p>\n                            <ModalProgressiveBar\n                                now={data.plCapital}\n                                suffix={'%'}\n                                size='small'\n                            />\n                        </Section>\n                        <div style={{marginTop: 20}}>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-workers\"\n                                    value={data.plWorkers}\n                                    title=\"produkuje w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-rnd\"\n                                    value={data.plRnD}\n                                    title=\"prowadzi badania i rozwój w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-registered\"\n                                    value={data.plRegistered}\n                                    title=\"zajerestrowana w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-not-glob-ent\"\n                                    value={data.plNotGlobEnt}\n                                    title=\"nie jest częścią zagranicznego koncernu\"\n                                />\n                            </Section>\n                        </div>\n                        {/* {data.is_friend && (\n                            <Section>\n                                To jest przyjaciel Poli\n                            </Section>\n                        )} */}\n                        <Section>\n                            {data.description}\n                        </Section>\n                    </SmallSection>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default SearchModal","export const randomString = (len) => {\n    let result = \"\"\n    for (let i = 0; i < len; i++) {\n        let asciiNumber = Math.floor(Math.random() * 35);\n        if (asciiNumber >= 0 && asciiNumber <= 9) {\n            result = result + String.fromCharCode(asciiNumber + 48)\n        } else {\n            result = result + String.fromCharCode(asciiNumber + 87)\n        }\n    }\n    return result\n}\n\nexport const randomDeviceId = () => {\n    return `WEB-${randomString(32)}`\n}\n\nexport const getCurrentDeviceId = () => {\n    let deviceId = localStorage.getItem('DEVICE_ID')\n    if (deviceId == null) {\n        deviceId= randomDeviceId()\n        localStorage.setItem('DEVICE_ID', deviceId);\n    }\n    return deviceId;\n}","import styled from \"styled-components\"\nimport { FormControl, Button } from \"react-bootstrap\"\n\nexport const SearchButton = styled(Button)`\n    background-color: transparent;\n    border: solid 4px #d8002f;\n    border-left: none;\n    color: #d8002f;\n    font-size: 28px;\n    padding: 0 20px;\n    :hover{\n        background-color: transparent;\n        border: solid 4px #d8002f;\n        border-left: none;\n        color: #d8002f;\n        box-shadow: none;\n        font-size: 35px;\n    }\n   :focus,:active {\n        outline: none !important;\n        box-shadow: none !important;\n        background-color: transparent !important;\n        border: solid 4px #d8002f !important;\n        border-left: none !important;\n        color: #d8002f !important;\n     }\n`\nexport const SearchFormControl = styled(FormControl)`\n    border: solid 4px #d8002f;\n    border-right: none;\n    font-size: 32px;\n    padding-left: 15px;\n    :focus{\n        box-shadow: none;\n        border: solid 4px #d8002f;\n        border-right: none;\n    }\n`","import React, { useState } from 'react'\nimport SearchModal from './SearchModal';\nimport axios from 'axios'\nimport {getCurrentDeviceId} from \"../../deviceId\";\nimport { InputGroup, Modal } from \"react-bootstrap\"\nimport { SearchButton, SearchFormControl } from \"./Search.css\"\nimport { ImSearch } from 'react-icons/im'\n\nconst Search = () => {\n  const [ean, setEan] = useState(\"\")\n  const [data, setData] = useState({})\n  const [isOpen, setOpen] = useState(false)\n\n  const openModal = () => setOpen(true);\n  const closeModal = () => setOpen(false);\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    if (ean.length > 0) {\n        try {\n           const resp = await axios.get('/get_by_code',\n            {\n              params: {\n                code: ean,\n                device_id: getCurrentDeviceId()\n              }\n            })\n\n            openModal();\n            setData(resp.data)\n        } catch(err) {\n            console.log(err)\n        }\n    }\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <form style={{ width: '50%', margin: '0 auto' }} onSubmit={handleSubmit}>\n        <InputGroup className=\"mb-3 border-0 w-100\" >\n          <SearchFormControl\n            type='text'\n            value={ean}\n            onChange={e => setEan(e.target.value)}\n            placeholder=\"Wpisz tutaj kod kreskowy\"\n          />\n          <InputGroup.Append>\n            <SearchButton type='submit' variant=\"outline-secondary\">\n              <ImSearch />\n            </SearchButton>\n          </InputGroup.Append>\n        </InputGroup>\n      </form>\n      <Modal\n        size=\"lg\"\n        show={isOpen}\n        onHide={closeModal}\n        aria-labelledby=\"example-modal-sizes-title-lg\"\n      >\n        <Modal.Body>\n          <SearchModal\n            data={data}\n            close={closeModal}\n          />\n        </Modal.Body>\n      </Modal>\n    </div >\n  )\n}\n\nexport default Search;","import React from 'react';\nimport Search from './pages/serach/Search'\n\nfunction App() {\n  return (\n    <div>\n        <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    const { worker } = require('./mocks/browser')\n    worker.start()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}