{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/layout/DevelopmentPlaceholder.tsx","webpack:///./src/components/buttons/SecondaryButton.tsx","webpack:///./src/components/About.tsx"],"names":["connect","state","location","app","props","dispatch","useDispatch","React","useEffect","LoadBrowserLocation","SelectActivePage","PageType","ABOUT","pageTitle","Container","styled","div","DevelopmentPlaceholder","text","size","styles","backgroundColor","color","background","secondary","textColor","primary","textAlign","ButtonContainer","Button","border","white","Device","mobile","fontSize","tiny","SecondaryButton","label","icon","className","disabled","children","onClick","theme","getButtonColor","e","stopPropagation","Wrapper","WrapperSection","MockUp","small","Info","dark","padding","normal","big","AboutText","Text","light","margin","AboutTitle","TitleSection","AboutButton","About","ButtonColor","White"],"mappings":"6FAAA,oHAmCeA,6BAAQ,SAACC,GAAD,MAAwB,CAAEC,SAAUD,EAAME,IAAID,YAAa,GAAnEF,EApBG,SAACI,GACjB,IAAQF,EAAaE,EAAbF,SACFG,EAAWC,wBASjB,OAPAC,IAAMC,WAAU,WACVN,IACFG,EAASI,YAAoBP,IAC7BG,EAASK,YAAiBC,IAASC,WAEpC,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaC,UAAU,WACvB,kBAAC,IAAD,MACA,kBAAC,IAAD,W,kCC9BN,+FAKMC,EAAYC,IAAOC,IAAV,wFAAGD,CAAH,8EAWFE,EAA4D,SAAC,GAAD,QAAGC,YAAH,MAAU,mBAAV,SACvE,kBAAC,IAAD,CACEC,KAAK,OACLC,OAAQ,CAAEC,gBAAiBC,IAAMC,WAAWC,UAAWC,UAAWH,IAAMJ,KAAKQ,QAASC,UAAW,WACjG,kBAACb,EAAD,KACE,4BAAKI,O,kCCrBX,2GAMMU,EAAkBb,YAAOc,KAAV,sFAAGd,CAAH,6HAECO,IAAMQ,OAAOC,MAIxBC,IAAOC,OAEDC,IAASC,MAgBbC,EAA8C,SAAC,GAStD,IARJC,EAQI,EARJA,MACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,UACAC,EAKI,EALJA,SACAlB,EAII,EAJJA,MACAY,EAGI,EAHJA,SACAO,EAEI,EAFJA,SACAC,EACI,EADJA,QASMC,EAAQ,CACZrB,MAHiBsB,YAAetB,GAIhCY,YAGF,OACE,kBAACN,EAAD,CAAiBe,MAAOA,EAAOJ,UAAWA,EAAWG,QAbnC,SAACG,GACnBA,EAAEC,mBACDN,GAAYE,GAAWA,KAWmDF,SAAUA,GAClFF,EACAD,EACAI,K,kCCxDP,qFAQMM,EAAUhC,YAAOiC,KAAV,iEAAGjC,CAAH,sGASPkC,EAASlC,IAAOC,IAAV,gEAAGD,CAAH,iIACUO,IAAMC,WAAWG,QAQ1BJ,IAAMJ,KAAKM,UACPU,IAASgB,OAIpBC,EAAOpC,IAAOC,IAAV,8DAAGD,CAAH,0CACYO,IAAMC,WAAW6B,KAC1BC,IAAQC,OAAUD,IAAQE,KAGjCC,EAAYzC,YAAO0C,KAAV,mEAAG1C,CAAH,8BACJO,IAAMJ,KAAKwC,MACNC,IAAOL,QAGjBM,EAAa7C,YAAO8C,KAAV,oEAAG9C,CAAH,eACLO,IAAMJ,KAAKwC,OAEhBI,EAAc/C,YAAOqB,KAAV,qEAAGrB,CAAH,kBACL4C,IAAOL,QAsBJS,IAnBD,WACZ,OACE,kBAAChB,EAAD,CAASzB,MAAOA,IAAMC,WAAW6B,MAC/B,kBAACD,EAAD,KACE,kBAACS,EAAD,eACA,kBAACJ,EAAD,uOAKA,kBAACM,EAAD,CAAazB,MAAM,yBAAyBf,MAAO0C,IAAYC,MAAO/B,SAAUA,IAASgB,SAE3F,kBAACD,EAAD,KACE","file":"component---src-pages-about-tsx-cefa84cf8c70c1282e96.js","sourcesContent":["import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\n\nimport { PageLayout } from '../layout/PageLayout';\nimport SEOMetadata from '../utils/browser/SEOMetadata';\nimport { IPolaState } from '../state/types';\nimport { LoadBrowserLocation, SelectActivePage } from '../state/app/app-actions';\nimport { DevelopmentPlaceholder } from '../layout/DevelopmentPlaceholder';\nimport About from '../components/About';\nimport { PageType } from '../domain/website';\n\ninterface IAboutPage {\n  location?: Location;\n}\n\nconst AboutPage = (props: IAboutPage) => {\n  const { location } = props;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.ABOUT));\n    }\n  }, []);\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle=\"O Poli\" />\n      <DevelopmentPlaceholder />\n      <About />\n    </PageLayout>\n  );\n};\n\nexport default connect((state: IPolaState) => ({ location: state.app.location }), {})(AboutPage);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { color } from '../styles/theme';\nimport { PageSection } from './PageSection';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 12rem;\n`;\n\ninterface IDevelopmentPlaceholder {\n  text?: string;\n}\n\nexport const DevelopmentPlaceholder: React.FC<IDevelopmentPlaceholder> = ({ text = 'Strona w budowie' }) => (\n  <PageSection\n    size=\"full\"\n    styles={{ backgroundColor: color.background.secondary, textColor: color.text.primary, textAlign: 'center' }}>\n    <Container>\n      <h2>{text}</h2>\n    </Container>\n  </PageSection>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from './Button';\nimport { ButtonColor, getButtonColor } from '../../styles/button-theme';\nimport { color, Device, fontSize } from '../../styles/theme';\n\nconst ButtonContainer = styled(Button)`\n  border-radius: 20px;\n  border: 2px solid ${color.border.white};\n  font-weight: 300;\n  text-transform: uppercase; \n\n  @media ${Device.mobile} {\n    display: none;\n    font-size: ${fontSize.tiny};\n  }\n`;\n\nexport interface ISecondaryButton {\n  label?: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  color?: ButtonColor;\n  fontSize?: string;\n  className?: string;\n  children?: React.ReactNode;\n\n  onClick?: () => void;\n}\n\nexport const SecondaryButton: React.FC<ISecondaryButton> = ({\n  label,\n  icon,\n  className,\n  disabled,\n  color,\n  fontSize,\n  children,\n  onClick,\n}) => {\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    !disabled && onClick && onClick();\n  };\n\n  const themeColor = getButtonColor(color);\n\n  const theme = {\n    color: themeColor,\n    fontSize,\n  };\n\n  return (\n    <ButtonContainer theme={theme} className={className} onClick={handleClick} disabled={disabled}>\n      {icon}\n      {label}\n      {children}\n    </ButtonContainer>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { padding, margin, color, fontSize } from '../styles/theme';\nimport { ButtonColor } from '../styles/button-theme';\nimport { WrapperSection, Text, TitleSection } from '../styles/GlobalStyle.css';\nimport { SecondaryButton } from './buttons/SecondaryButton';\n\nconst Wrapper = styled(WrapperSection)`\n  min-height: 32.3em;\n  grid-area: about;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column-reverse;\n`;\n\nconst MockUp = styled.div`\n  background-color: ${color.background.primary};\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  p {\n    margin: 0;\n    color: ${color.text.secondary};\n    font-size: ${fontSize.small};\n  }\n`;\n\nconst Info = styled.div`\n  background-color: ${color.background.dark};\n  padding: ${padding.normal} ${padding.big};\n`;\n\nconst AboutText = styled(Text)`\n  color: ${color.text.light};\n  margin-top: ${margin.normal};\n`;\n\nconst AboutTitle = styled(TitleSection)`\n  color: ${color.text.light};\n`;\nconst AboutButton = styled(SecondaryButton)`\n  margin: ${margin.normal} 0;\n`;\n\nconst About = () => {\n  return (\n    <Wrapper color={color.background.dark}>\n      <Info>\n        <AboutTitle>O Poli</AboutTitle>\n        <AboutText>\n          Masz dość masówki globalnych koncernów? Szukasz lokalnych firm tworzących unikatowe produkty? Pola pomoże Ci\n          odnaleźć polskie wyroby. Zabierając Polę na zakupy, odnajdujesz produkty „z duszą” i wspierasz polską\n          gospodarkę.\n        </AboutText>\n        <AboutButton label=\"Dowiedz się więcej... \" color={ButtonColor.White} fontSize={fontSize.small} />\n      </Info>\n      <MockUp>\n        <p>Mock up telefonu z uruchomioną aplikacją</p>\n      </MockUp>\n    </Wrapper>\n  );\n};\n\nexport default About;\n"],"sourceRoot":""}