{"version":3,"sources":["webpack:///./src/pages/products.tsx"],"names":["connect","state","location","app","phrase","search","searchResults","products","token","searchState","stateName","articles","data","friends","invokeSearch","searchDispatcher","onLoadMore","invokeLoadMore","clearResults","selectProduct","props","dispatch","useDispatch","React","useEffect","LoadBrowserLocation","length","navigateTo","urls","pola","home","loadButton","SearchStateName","LOADING","disabled","icon","styles","size","color","button","white","ButtonColor","Red","label","onClick","title","results","actions","onSelect"],"mappings":"4FAAA,oNA6EeA,6BACb,SAACC,GAAD,MAAwB,CACtBC,SAAUD,EAAME,IAAID,SACpBE,OAAQH,EAAMI,OAAOD,OACrBE,cAAeL,EAAMI,OAAOE,SAC5BC,MAAOP,EAAMI,OAAOG,MACpBC,YAAaR,EAAMI,OAAOK,UAC1BC,SAAUV,EAAMU,SAASC,KACzBC,QAASZ,EAAMY,QAAQD,QAEzB,CACEE,aAAcC,IAAiBD,aAC/BE,WAAYD,IAAiBE,eAC7BC,aAAcH,IAAiBG,aAC/BC,cAAeJ,IAAiBI,eAdrBnB,EAxCM,SAACoB,GACpB,IAAQhB,EAA6DgB,EAA7DhB,OAAQE,EAAqDc,EAArDd,cAAeJ,EAAsCkB,EAAtClB,SAAUc,EAA4BI,EAA5BJ,WAAYP,EAAgBW,EAAhBX,YAC/CY,EAAWC,wBASjB,GAPAC,IAAMC,WAAU,WACVtB,GACFmB,EAASI,YAAoBvB,MAE9B,KAEmBI,GAAiBA,EAAcoB,OAAS,EAG5D,OADAC,YAAWC,IAAKC,KAAKC,MACd,KAGT,IAAMC,EACJtB,IAAgBuB,IAAgBC,QAC9B,kBAAC,IAAD,CACEC,UAAU,EACVC,KAAM,kBAAC,IAAD,CAASC,OAAQ,CAAEC,KAAM,GAAIC,MAAOA,IAAMC,OAAOC,SACvDF,MAAOG,IAAYC,MAGrB,kBAAC,IAAD,CAAeC,MAAM,iBAAiBL,MAAOG,IAAYC,IAAKE,QAAS5B,IAG3E,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAa6B,MAAM,mCACnB,kBAAC,IAAD,CAAqBzC,OAAQA,EAAQE,cAAeA,EAAeG,YAAaA,IAC/EH,GACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBwC,QAASxC,EAAeyC,QAAShB,EAAYiB,SAAU5B,EAAMD","file":"component---src-pages-products-tsx-34d046aa5fe3252d0978.js","sourcesContent":["import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\n\nimport { PageLayout } from '../layout/PageLayout';\nimport SEOMetadata from '../layout/SEOMetadata';\nimport { PageSection } from '../layout/PageSection';\nimport { color } from '../styles/theme';\nimport { IPolaState } from '../state/types';\nimport { searchDispatcher } from '../state/search/search-dispatcher';\nimport { LoadBrowserLocation } from '../state/app/app-actions';\nimport { IProductData } from '../domain/products';\nimport { IArticle } from '../domain/articles';\nimport { IFriend } from '../domain/friends';\nimport { SearchResultsList } from '../search/results-list/SearchResultsList';\nimport { PrimaryButton } from '../components/buttons/PrimaryButton';\nimport { ButtonColor } from '../styles/button-theme';\nimport { Spinner } from '../layout/Spinner';\nimport { SearchStateName } from '../state/search/search-reducer';\nimport { SearchResultsHeader } from '../search/results-list/SearchResultsHeader';\nimport { navigateTo } from '../utils/browser';\nimport { urls } from '../utils/browser/urls';\n\ninterface IProductsPage {\n  location?: Location;\n  phrase: string;\n  searchResults: IProductData[];\n  token?: string;\n  searchState: SearchStateName;\n  articles?: IArticle[];\n  friends?: IFriend[];\n\n  invokeSearch: (phrase: string) => void;\n  onLoadMore: () => void;\n  clearResults: () => void;\n  selectProduct: (code: string, id: string) => void;\n}\n\nconst ProductsPage = (props: IProductsPage) => {\n  const { phrase, searchResults, location, onLoadMore, searchState } = props;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n    }\n  }, []);\n\n  const emptyResults = !searchResults || searchResults.length < 1;\n  if (emptyResults) {\n    navigateTo(urls.pola.home);\n    return null;\n  }\n\n  const loadButton =\n    searchState === SearchStateName.LOADING ? (\n      <PrimaryButton\n        disabled={true}\n        icon={<Spinner styles={{ size: 20, color: color.button.white }} />}\n        color={ButtonColor.Red}\n      />\n    ) : (\n      <PrimaryButton label=\"Wczytaj wiÄ™cej\" color={ButtonColor.Red} onClick={onLoadMore} />\n    );\n\n  return (\n    <PageLayout>\n      <SEOMetadata title=\"Pola Web | Znalezione produkty\" />\n      <SearchResultsHeader phrase={phrase} searchResults={searchResults} searchState={searchState} />\n      {searchResults && (\n        <PageSection>\n          <SearchResultsList results={searchResults} actions={loadButton} onSelect={props.selectProduct} />\n        </PageSection>\n      )}\n    </PageLayout>\n  );\n};\n\nexport default connect(\n  (state: IPolaState) => ({\n    location: state.app.location,\n    phrase: state.search.phrase,\n    searchResults: state.search.products,\n    token: state.search.token,\n    searchState: state.search.stateName,\n    articles: state.articles.data,\n    friends: state.friends.data,\n  }),\n  {\n    invokeSearch: searchDispatcher.invokeSearch,\n    onLoadMore: searchDispatcher.invokeLoadMore,\n    clearResults: searchDispatcher.clearResults,\n    selectProduct: searchDispatcher.selectProduct,\n  }\n)(ProductsPage);\n"],"sourceRoot":""}