{"version":3,"sources":["webpack:///./src/components/DevelopmentSection.tsx","webpack:///./src/components/tags/TagsList.tsx","webpack:///./src/components/friends/friends-url-service.ts","webpack:///./src/components/buttons/SecondaryButton.tsx","webpack:///./src/utils/friends/index.ts","webpack:///./src/components/articles/ArticleHeader.tsx","webpack:///./src/components/friends/FriendCard.tsx","webpack:///./src/components/SideInformations.tsx","webpack:///./src/components/articles/ArticlePage.tsx","webpack:///./src/templates/ArticleTemplate.tsx","webpack:///./src/utils/articles/index.ts","webpack:///./src/components/articles/list/ArticlePreview.tsx","webpack:///./src/components/articles/list/ArticlesListPrewiev.tsx","webpack:///./src/utils/tags/index.ts"],"names":["Info","styled","div","Device","mobile","TextSection","margin","normal","padding","color","background","white","Texts","small","DevelopmentTitle","TitleSection","DevelopmentText","Text","big","ImgSection","Wrapper","WrapperSection","Container","styledContainerQuery","DevelopmentSection","red","imageSrc","className","label","fontSize","ButtonColor","Red","Title","p","TagsList","tag","activeTags","map","el","id","key","active","includes","buildFriendUrl","slug","sectionId","encodedQuery","encodeQueryParams","value","StringParam","urls","pola","friends","stringify","ButtonContainer","Button","border","tiny","SecondaryButton","icon","disabled","children","onClick","theme","getButtonColor","e","stopPropagation","getRandomFriend","Math","floor","random","length","getFriendBySlug","find","friend","h1","Image","Img","ArticleHeader","title","subTitle","date","fluid","category","getDate","Content","ImageSection","ButtonSection","FriendCard","transparencyGrey","image","ResponsiveImage","description","to","friendUrl","hash","FirstSection","SecondSection","SideInformations","actualArticleId","articles","useState","articlesPreview","setArticlesPreview","selectedFriend","setSelectedFriend","useEffect","getVisibleArticles","SocialMedia","getTagsList","props","html","dangerouslySetInnerHTML","__html","veryBig","FirstColumn","SecondColumn","connect","state","location","app","data","article","author","facebook","frontmatter","fields","prefix","cover","childImageSharp","dispatch","useDispatch","LoadBrowserLocation","SelectActivePage","PageType","ARTICLE","PageLayout","SEOMetadata","pageTitle","PageSection","ArticleTemplate","pageContext","post","getArticlesTwoColumns","sortedArticles","section","i","undefined","push","first","second","slice","art","splice","ArticleImage","ArticleTag","ArticleDate","ArticleText","ArticleSection","ArticlePreview","imagePath","ArticleTitle","ArticleContents","text","ArticlesButton","PrimaryButton","ArticlesListPreview","news","cat","sort","unique","Set","Array","from"],"mappings":"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","file":"component---src-templates-article-template-tsx-e4c9ccb82acbfc94cd82.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport styledContainerQuery from 'styled-container-query'\n\nimport { Device, fontSize, margin, color, padding } from './../styles/theme';\nimport { SecondaryButton } from './buttons/SecondaryButton';\nimport { ButtonColor } from '../styles/button-theme';\nimport { WrapperSection } from '../styles/GlobalStyle.css';\nimport { TitleSection, Text } from '../styles/GlobalStyle.css';\nimport { ResponsiveImage } from '../components/images/ResponsiveImage';\n\nconst Info = styled.div`\n  width: 50%;\n  height: initial;\n  position: relative;\n\n  @media ${Device.mobile} {\n    width: 8em;\n    height: 10em;\n    margin: 0 auto;\n  }\n`;\n\nconst TextSection = styled.div`\n  margin-right: ${margin.normal};\n  padding: 0 ${padding.normal};\n  background-color: ${color.background.white};\n\n  @media ${Device.mobile} {\n    padding: ${padding.normal};\n    width: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nconst Texts = styled.div`\n  width: 50%;\n  background-color: ${color.background.white};\n  margin-right: ${margin.small};\n\n  @media ${Device.mobile} {\n    margin-bottom: ${margin.small};\n    margin-right: 0;\n    width: 100%;\n  }\n\n`;\n\nconst DevelopmentTitle = styled(TitleSection)`\n  margin-bottom: ${margin.normal};\n\n`;\n\nconst DevelopmentText = styled(Text)`\n  margin-bottom: ${margin.big};\n`;\n\nconst ImgSection = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  margin: auto;\n  top: 50%;\n  transform: translateY(-50%);\n\n  @media ${Device.mobile}{\n    top: 0;\n    transform: translateY(0px);\n\n    div {\n    picture {\n      img{\n        width: auto !important;\n        left: 50% !important;\n        transform: translateX(-50%) !important;\n      }\n    }\n  }\n}  \n`\n\nconst Wrapper = styled(WrapperSection)``;\n\nconst Container = styledContainerQuery(Wrapper)`\n  display: flex;\n  flex-direction: row;\n  grid-area: development;\n  min-height: 16.1em;\n  width: 100%;\n\n  @media ${Device.mobile} {\n    min-height: 0;\n    display: flex;\n    flex-direction: column;\n  }\n\n  &:container(max-width: 450px){\n    min-height: 0;\n    display: flex;\n    flex-direction: column;\n\n    ${Info}{\n      width: 8em;\n      height: 10em;\n      margin: 0 auto;\n    }\n\n    ${TextSection}{\n      padding: ${padding.normal};\n      width: auto;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    ${Texts}{\n      margin-bottom: ${margin.small};\n      width: 100%;\n    }\n\n    ${ImgSection}{\n      top: 0;\n      transform: translateY(0px);\n\n      div {\n      picture {\n        img{\n          width: auto !important;\n          left: 50% !important;\n          transform: translateX(-50%) !important;\n        }\n      }\n    }\n    }\n  }\n`;\n\nconst DevelopmentSection = () => {\n  return (\n    <Container color={color.background.red}>\n      <Info>\n        <ImgSection>\n          <ResponsiveImage imageSrc='smutny-2.png' />\n        </ImgSection>\n      </Info>\n      <Texts>\n        <TextSection>\n          <DevelopmentTitle>Zobacz jak rozwija się Aplikacja Pola i wspomóż ją!</DevelopmentTitle>\n          <DevelopmentText>Dowiedz się co możesz jeszcze zrobić, aby wspierać polskich producentów.</DevelopmentText>\n          <div className='buttons'>\n            <SecondaryButton label=\"Czytaj dalej...\" fontSize={fontSize.small} color={ButtonColor.Red} />\n          </div>\n        </TextSection>\n      </Texts>\n    </Container>\n  );\n};\n\nexport default DevelopmentSection;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Tag from './Tag'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n`\n\nconst Title = styled.p`\n  font-weight: bold;\n`\n\ninterface ITagsList {\n  tag?: string[],\n  activeTags?: string[]\n}\n\nconst TagsList: React.FC<ITagsList> = ({ tag, activeTags }) => {\n  return (\n    <div>\n      <Title>kategorie</Title>\n      <Wrapper>\n        {tag &&\n          tag.map((el, id) => (\n            <Tag key={`tag_${id}`} label={el} active={activeTags?.includes(el)} />\n          ))\n        }\n      </Wrapper>\n    </div>\n  )\n}\n\nexport default TagsList;","import { encodeQueryParams, StringParam } from 'use-query-params';\nimport { urls } from '../../domain/website';\nimport { stringify } from 'query-string';\n\nexport function buildFriendUrl(slug: string, sectionId: string) {\n  const encodedQuery = encodeQueryParams({ value: StringParam }, { value: slug });\n  return `${urls.pola.friends}?${stringify(encodedQuery)}#${sectionId}`;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from './Button';\nimport { ButtonColor, getButtonColor } from '../../styles/button-theme';\nimport { color, Device, fontSize } from '../../styles/theme';\n\nconst ButtonContainer = styled(Button)`\n  border-radius: 20px;\n  border: 2px solid ${color.border.white};\n  font-weight: 300;\n  text-transform: uppercase; \n\n  @media ${Device.mobile} {\n    font-size: ${fontSize.tiny};\n  }\n`;\n\nexport interface ISecondaryButton {\n  label?: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  color?: ButtonColor;\n  fontSize?: string;\n  className?: string;\n  children?: React.ReactNode;\n\n  onClick?: () => void;\n}\n\nexport const SecondaryButton: React.FC<ISecondaryButton> = ({\n  label,\n  icon,\n  className,\n  disabled,\n  color,\n  fontSize,\n  children,\n  onClick,\n}) => {\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    !disabled && onClick && onClick();\n  };\n\n  const themeColor = getButtonColor(color);\n\n  const theme = {\n    color: themeColor,\n    fontSize,\n  };\n\n  return (\n    <ButtonContainer theme={theme} className={className} onClick={handleClick} disabled={disabled}>\n      {icon}\n      {label}\n      {children}\n    </ButtonContainer>\n  );\n};\n","import { Friend } from '../../domain/friends';\n\nexport function getRandomFriend(friends: Friend[]) {\n  const randomNumber = Math.floor(Math.random() * friends.length);\n  return friends[randomNumber];\n}\n\nexport function getFriendBySlug(slug: string, friends: Friend[]) {\n  return friends.find((friend) => friend.slug === slug);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getDate } from '../../utils/dates';\nimport Img, { FluidObject } from 'gatsby-image';\nimport { Text } from '../../styles/GlobalStyle.css';\n\nconst Title = styled.h1`\n  padding: 0;\n  margin: 0;\n`\n\nconst Image = styled(Img)`\n  max-height: 80vh;\n`\n\ninterface IArticleHeader {\n  title: string;\n  subTitle: string;\n  date: string;\n  fluid: FluidObject | FluidObject[];\n  category?: string\n}\n\nexport const ArticleHeader: React.FC<IArticleHeader> = ({ title, subTitle, date, fluid, category }) => (\n  <>\n    <Title>{title}</Title>\n    <Text>{category} | {getDate(date)}</Text>\n    <p>{subTitle}</p>\n    <Image fluid={fluid} />\n  </>\n);\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Friend } from '../../domain/friends'\nimport { hash } from '../../domain/website'\nimport { ButtonColor } from '../../styles/button-theme'\n\nimport { TitleSection, WrapperSection, Text } from '../../styles/GlobalStyle.css'\nimport { color, padding, margin, fontSize } from '../../styles/theme'\nimport { SecondaryButton } from '../buttons/SecondaryButton'\nimport { ResponsiveImage } from '../images/ResponsiveImage'\nimport { friendUrl } from './friends-url-service'\n\nconst Wrapper = styled(WrapperSection)`\n  padding: ${padding.normal};\n`\n\nconst Content = styled(Text)`\n   overflow: hidden;\n   text-overflow: ellipsis;\n   display: -webkit-box;\n   -webkit-line-clamp: 3;\n   -webkit-box-orient: vertical;\n   margin: ${margin.normal} 0;\n`\n\nconst ImageSection = styled.div`\n  .gatsby-image-wrapper{\n    max-height: 8em;\n\n    picture{\n      img{\n        width: auto !important;\n        left: 50% !important;\n        transform: translateX(-50%);\n      }\n    }\n  }\n`\n\nconst Button = styled(SecondaryButton)`\n  text-transform : capitalize;\n  font-weight: bold;\n  border-color: ${color.background.red};\n  width: 100%;\n`\n\nconst ButtonSection = styled.div`\n  padding: 0 ${padding.normal};\n  display: flex;\n  flex-direction: column;\n  gap: ${margin.small};\n`\n\nconst FriendCard: React.FC<Friend> = (friend) => {\n  return (\n    <Wrapper color={color.background.transparencyGrey}>\n      <TitleSection>Oto jeden Przyjaciel z wielu Przyjaciół Poli</TitleSection>\n      {friend.image &&\n        <ImageSection>\n          <ResponsiveImage imageSrc={friend.image} />\n        </ImageSection>\n      }\n      <Content>{friend.description}</Content>\n      <ButtonSection>\n        {friend.slug &&\n          <Link to={friendUrl(friend.slug, hash.friends.friend.id)}>\n            <Button\n              label=\"Czytaj Więcej...\"\n              color={ButtonColor.Red}\n              fontSize={fontSize.small}\n            />\n          </Link>\n        }\n      </ButtonSection>\n    </Wrapper>\n  )\n}\n\nexport default FriendCard","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { Article } from '../domain/articles';\nimport { Friend } from '../domain/friends';\nimport { Device, margin } from '../styles/theme';\nimport { getVisibleArticles } from '../utils/articles';\nimport { getRandomFriend } from '../utils/friends';\nimport { getTagsList } from '../utils/tags';\nimport ArticlesListPreview from './articles/list/ArticlesListPrewiev';\nimport DevelopmentSection from './DevelopmentSection';\nimport FriendCard from './friends/FriendCard';\nimport SocialMedia from './SocialMedia';\nimport TagsList from './tags/TagsList';\n\nconst Wrapper = styled.div`\n  gap: ${margin.normal};\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.p`\n  font-weight: bold;\n`\n\nconst FirstSection = styled.div`\n  @media ${Device.mobile} {\n    display: none;\n  }\n`\n\nconst SecondSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${margin.normal};\n\n  @media ${Device.mobile} {\n    flex-direction: column-reverse;\n  }\n`\n\ninterface ISideInformations {\n  actualArticleId: string,\n  articles: Article[],\n  friends?: Friend[]\n}\n\nconst SideInformations: React.FC<ISideInformations> = ({ actualArticleId, articles, friends }) => {\n  const [articlesPreview, setArticlesPreview] = useState<Article[]>([])\n  const [selectedFriend, setSelectedFriend] = useState<Friend>()\n\n  useEffect(() => {\n    if (articles) {\n      setArticlesPreview(getVisibleArticles(actualArticleId, articles))\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (friends) {\n      setSelectedFriend(getRandomFriend(friends))\n    }\n  }, [friends]);\n\n  return (\n    <Wrapper>\n      <FirstSection>\n        <DevelopmentSection />\n      </FirstSection>\n      <SecondSection>\n        <SocialMedia />\n        <TagsList tag={articles && getTagsList(articles)} />\n      </SecondSection>\n      <Title>Zobacz także:</Title>\n      <ArticlesListPreview articles={articlesPreview} />\n      {friends && selectedFriend && <FriendCard {...selectedFriend} />}\n    </Wrapper>\n  )\n}\n\nexport default SideInformations;","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect, useDispatch } from 'react-redux';\n\nimport { PageLayout } from '../../layout/PageLayout';\nimport SEOMetadata from '../../utils/browser/SEOMetadata';\nimport { IPolaState } from '../../state/types';\nimport { LoadBrowserLocation, SelectActivePage } from '../../state/app/app-actions';\nimport { PageType } from '../../domain/website';\nimport { PageSection } from '../../layout/PageSection';\nimport { ArticleHeader } from './ArticleHeader';\nimport { Device, margin } from '../../styles/theme';\nimport { Article } from '../../domain/articles';\nimport SideInformations from '../SideInformations';\nimport { Friend } from '../../domain/friends';\n\nconst Content = (props: any) => {\n  const { html, children } = props;\n\n  if (html) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\n  } else {\n    return <div>{children}</div>;\n  }\n};\n\ninterface IArticlePage {\n  location?: Location;\n  article: any;\n  articles: Article[];\n  friends: Friend[];\n  author?: any;\n  slug?: string;\n  facebook?: any;\n  cover?: any;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: ${margin.veryBig};\n  margin-top: ${margin.veryBig};\n\n  @media ${Device.mobile} {\n    display: inline;\n    gap: 0;\n  }\n`\n\nconst FirstColumn = styled.div`\n  flex: 3;\n  flex-basis: 0;\n\n  @media ${Device.mobile} {\n    margin-top: ${margin.veryBig};\n\n  }\n`\n\nconst SecondColumn = styled.div`\n  flex: 1;\n  flex-basis: 0;\n`\n\nconst ArticlePage = (props: IArticlePage) => {\n  const { location, article, author, slug, facebook, articles, friends } = props;\n  const title = ((article || {}).frontmatter || {}).title;\n  const subTitle = ((article || {}).frontmatter || {}).subTitle;\n  const category = ((article || {}).frontmatter || {}).category;\n  const date = ((article || {}).fields || {}).prefix;\n  const html = (article || {}).html;\n  const fluid = ((article || {}).frontmatter || {}).cover.childImageSharp.fluid;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.ARTICLE));\n    }\n  }, []);\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle={`Pola Web | ${title}`} />\n      <PageSection>\n        <Wrapper>\n          <FirstColumn>\n            <PageSection>\n              <ArticleHeader\n                title={title}\n                subTitle={subTitle}\n                date={date}\n                fluid={fluid}\n                category={category}\n              />\n            </PageSection>\n            <PageSection>\n              <Content html={html} />\n            </PageSection>\n          </FirstColumn>\n          <SecondColumn>\n            <SideInformations actualArticleId={article.id} articles={articles} friends={friends} />\n          </SecondColumn>\n        </Wrapper>\n      </PageSection>\n    </PageLayout>\n  );\n};\n\nexport default connect((state: IPolaState) => ({\n  location: state.app.location,\n  articles: state.articles.data,\n  friends: state.friends.data\n}), {})(ArticlePage);\n","import React from 'react';\nimport ArticlePage from '../components/articles/ArticlePage';\nimport { graphql } from 'gatsby';\n\ninterface IArticleTemplate {\n  data: any;\n  pageContext: any;\n}\n\nexport const ArticleTemplate: React.FC<IArticleTemplate> = ({ data, pageContext }) => (\n  <ArticlePage article={data.post} slug={pageContext.slug as string} />\n);\n\nexport default ArticleTemplate;\n\n//eslint-disable-next-line no-undef\nexport const postQuery = graphql`\n  query PostBySlug($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      htmlAst\n      fields {\n        slug\n        prefix\n      }\n      frontmatter {\n        title\n        subTitle\n        category\n        cover {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import { Article } from '../../domain/articles';\n\nexport interface IArticlesTwoColumns {\n  first: Article;\n  second?: Article;\n}\n\nexport function getArticlesTwoColumns(articles: Article[]) {\n  const sortedArticles: IArticlesTwoColumns[] = [];\n  let section: IArticlesTwoColumns[] = [];\n\n  for (let i = 0; i < articles.length; i = i + 2) {\n    if (articles[i + 1] !== undefined) {\n      section.push({ first: articles[i], second: articles[i + 1] });\n    } else {\n      section.push({ first: articles[i] });\n    }\n\n    if (section.length === 3 || i + 2 >= articles.length) {\n      sortedArticles.push(section.slice());\n      section = [];\n    }\n  }\n\n  return sortedArticles;\n}\n\nexport function getVisibleArticles(actualArticleId: string, articles: Article[]) {\n  let art = articles.slice();\n  for (let i = 0; i < art.length; i++) {\n    if (art[i].id === actualArticleId) {\n      art.splice(i, 1);\n    }\n  }\n  if (art.length > 3) {\n    art = art.slice(0, 3);\n  }\n\n  return art;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport styledContainerQuery from 'styled-container-query'\nimport { ResponsiveImage } from '../../images/ResponsiveImage';\nimport { WrapperSection } from '../../../styles/GlobalStyle.css';\nimport { Device, color, fontSize } from '../../../styles/theme';\nimport ArticleContents from './ArticleContents';\nimport ArticleTitle from './ArticleTitle';\nimport { Article } from '../../../domain/articles';\nimport { ArticleDate, ArticleTag, ArticleText } from './ArticleContents.css';\n\nconst ArticleImage = styled.div`\n  width: 50%;\n  text-align: left;\n  .gatsby-image-wrapper{\n    div{\n      padding-bottom: 14em !important;\n    }\n  }\n\n  @media ${Device.mobile} {\n    .gatsby-image-wrapper{\n      div{\n        padding-bottom: 5em !important;\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled(WrapperSection)``;\n\nconst Container = styledContainerQuery.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 16.5em;\n  margin-bottom: 15px;\n\n  @media ${Device.mobile} {\n    min-height: 0;\n  }\n\n  &:container(max-width: 450px) {\n    min-height: 0;\n\n    ${ArticleTag} {\n      display: none;\n    }\n\n    ${ArticleDate} {\n      display: none;\n    }\n\n    ${ArticleText} {\n      font-size: ${fontSize.small};\n    }\n\n    ${ArticleImage}{\n      .gatsby-image-wrapper{\n        div{\n          padding-bottom: 5em !important;\n        }\n      }\n    }\n  }\n`;\n\nconst ArticleSection = styled.div`\n  width: 50%;\n  margin: 0 15px;\n\n  @media ${Device.mobile} {\n    width: 60%;\n  }\n`;\n\nexport const ArticlePreview: React.FC<Article> = ({ imagePath, title, slug, date, subTitle, tag }) => {\n  return (\n    <Container color={color.background.white}>\n      <ArticleImage>{imagePath && <ResponsiveImage imageSrc={imagePath} />}</ArticleImage>\n      <ArticleSection>\n        <ArticleTitle title={title} slug={slug} />\n        <ArticleContents\n          date={date}\n          text={subTitle}\n          tag={tag}\n        />\n      </ArticleSection>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Article } from '../../../domain/articles';\nimport { ArticlePreview } from './ArticlePreview';\nimport { Device, padding, margin } from '../../../styles/theme';\nimport { PrimaryButton } from '../../buttons/PrimaryButton';\nimport { Link } from 'gatsby';\nimport { urls } from '../../../domain/website';\nimport { ButtonColor } from '../../../styles/button-theme';\n\nconst Wrapper = styled.div`\n  grid-area: articles;\n\n  @media ${Device.mobile} {\n    padding: ${padding.normal};\n    margin-bottom: ${margin.normal};\n  }\n`;\n\nconst ArticlesButton = styled(PrimaryButton)`\n  width: 100%;\n  padding: ${padding.normal};\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n`;\n\ninterface IArticlesList {\n  articles?: Article[];\n}\n\nexport const ArticlesListPreview: React.FC<IArticlesList> = ({ articles }) => {\n  return (\n    <Wrapper>\n      {articles &&\n        articles.map((article: Article) => (\n          <ArticlePreview\n            key={article.id}\n            id={article.id}\n            title={article.title}\n            slug={article.slug}\n            imagePath={article.imagePath}\n            date={article.date}\n            subTitle={article.subTitle}\n            tag={article.tag}\n          />\n        ))}\n      <Link to={urls.pola.news}>\n        <ArticlesButton label=\"ZOBACZ POPRZEDNIE ARTYKUŁY\" color={ButtonColor.Red} />\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default ArticlesListPreview;\n","import { Article } from '../../domain/articles';\n\nexport function getTagsList(articles: Article[]) {\n  const cat: string[] = articles\n    .map((el: Article) => {\n      return el.tag;\n    })\n    .sort();\n  const unique = new Set(cat);\n  return Array.from(unique);\n}\n"],"sourceRoot":""}