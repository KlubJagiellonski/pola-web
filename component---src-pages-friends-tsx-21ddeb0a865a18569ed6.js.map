{"version":3,"sources":["webpack:///./src/layout/ColumnsLayout.tsx","webpack:///./src/utils/friends/index.ts","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/Placeholder.tsx","webpack:///./src/components/Card.tsx","webpack:///./src/components/friends/SingleFriend.tsx","webpack:///./src/components/friends/FriendsSection.tsx","webpack:///./src/pages/friends.tsx"],"names":["ColumnsLayout","styled","div","padding","big","Device","mobile","normal","desktop","props","size","undefined","pageWidth","ContentColumn","hideOnMobile","getRandomFriend","friends","Math","floor","random","length","getFriendBySlug","slug","find","friend","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Wrapper","WrapperSection","color","text","light","fontSize","Placeholder","background","red","Button","SecondaryButton","Title","TitleSection","margin","TextInfo","Text","ButtonInfoSection","Card","title","content","buttonLabel","url","to","label","ButtonColor","Red","small","WrapperContents","PageSection","RightColumn","LeftColumn","ImageSection","ButtonSection","ButtonWhiteRed","border","grey","ButtonRed","SingleFriend","name","description","image","page","ResponsiveImage","imageSrc","href","target","buildFriendUrl","hash","profit","id","WhiteRed","FriendsSection","query","useQueryParams","value","StringParam","useState","setFriend","useEffect","Friends","veryBig","TextSection","ul","FullWrapperInfo","FullContentInfo","UlSection","secondary","WrapperInfo","Info","TitleInfo","connect","state","location","app","data","dispatch","useDispatch","React","LoadBrowserLocation","SelectActivePage","PageType","FRIENDS","PageLayout","SEOMetadata","pageTitle","transparencyGrey","white","urls","pola","contact"],"mappings":"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","file":"component---src-pages-friends-tsx-21ddeb0a865a18569ed6.js","sourcesContent":["import styled from 'styled-components';\nimport { Device, pageWidth, padding, color } from '../styles/theme';\n\ninterface IColumnsLayout {\n  size?: 'narrow' | 'full';\n}\n\nexport const ColumnsLayout = styled.div<IColumnsLayout>`\n  display: flex;\n  flex-flow: row nowrap;\n  gap: ${padding.big};\n  position: relative;\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  @media ${Device.mobile} {\n    padding: 0 ${padding.normal};\n    flex-flow: column;\n  }\n  @media ${Device.desktop} {\n    max-width: ${(props) => (props.size === 'full' ? undefined : pageWidth)};\n    padding-bottom: ${(props) => (props.size === 'full' ? 0 : padding.normal)};\n  }\n`;\n\nexport const ContentColumn = styled.div<{ hideOnMobile?: boolean }>`\n  display: flex;\n  flex-flow: column;\n  flex: 1 1 auto;\n\n  @media ${Device.mobile} {\n    display: ${(props) => (props.hideOnMobile ? 'none' : 'block')};\n  }\n`;\n","import { Friend } from '../../domain/friends';\n\nexport function getRandomFriend(friends: Friend[]) {\n  const randomNumber = Math.floor(Math.random() * friends.length);\n  return friends[randomNumber];\n}\n\nexport function getFriendBySlug(slug: string, friends: Friend[]) {\n  return friends.find((friend) => friend.slug === slug);\n}\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from 'react'\nimport styled from 'styled-components'\nimport { WrapperSection } from '../styles/GlobalStyle.css'\nimport { color, padding, fontSize } from '../styles/theme'\n\nconst Wrapper = styled(WrapperSection)`\n  color: ${color.text.light};\n  padding: ${padding.normal};\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  font-size: ${fontSize.normal};\n  font-weight: bold;\n\n  p{\n    margin: 0;\n    padding: 0;\n  }\n`\n\ninterface IPlaceholder {\n  text: string;\n}\n\n\nconst Placeholder: React.FC<IPlaceholder> = ({ text }) => {\n  return (\n    <Wrapper color={color.background.red}>\n      <p>{text}</p>\n    </Wrapper>\n  )\n}\n\nexport default Placeholder;","import { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { ButtonColor } from '../styles/button-theme'\nimport { TitleSection, WrapperSection, Text } from '../styles/GlobalStyle.css'\nimport { color, fontSize, margin, padding } from '../styles/theme'\nimport { SecondaryButton } from './buttons/SecondaryButton'\n\nconst Wrapper = styled(WrapperSection)`\n  margin: 0;\n  padding: ${padding.big};\n`\n\nconst Button = styled(SecondaryButton)`\n  text-transform : capitalize;\n  font-weight: bold;\n  min-width: 300px;\n`\n\nconst Title = styled(TitleSection)`\n  text-align: center;\n  color: ${color.text.light};\n  margin-bottom: ${margin.big};\n`\n\nconst TextInfo = styled(Text)`\n  color: ${color.text.light};\n  text-align: center;\n`\n\nconst ButtonInfoSection = styled.div`\n  display: flex;\n  justify-content: center;\n`\ninterface ICard {\n  title: string;\n  content: string;\n  buttonLabel: string;\n  url: string;\n}\n\nconst Card: React.FC<ICard> = ({ title, content, buttonLabel, url }) => {\n  return (\n    <Wrapper color={color.background.red}>\n      <Title>{title}</Title>\n      <TextInfo>{content}</TextInfo>\n      <ButtonInfoSection>\n        <Link to={url}>\n          <Button\n            label={buttonLabel}\n            color={ButtonColor.Red}\n            fontSize={fontSize.small}\n          />\n        </Link>\n      </ButtonInfoSection>\n    </Wrapper>\n  )\n}\n\nexport default Card;","import React from 'react'\nimport styled from 'styled-components'\nimport { Friend } from '../../domain/friends'\nimport { hash } from '../../domain/website';\nimport { PageSection } from '../../layout/PageSection';\nimport { color, Device, fontSize, margin } from '../../styles/theme';\nimport { ResponsiveImage } from '../images/ResponsiveImage';\nimport { TitleSection, Text, } from '../../styles/GlobalStyle.css';\nimport { SecondaryButton } from '../buttons/SecondaryButton';\nimport { ButtonColor } from '../../styles/button-theme';\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\";\nimport { buildFriendUrl } from './friends-url-service';\nimport { ColumnsLayout, ContentColumn } from '../../layout/ColumnsLayout';\n\nconst WrapperContents = styled(PageSection)`\n  margin-top: ${margin.normal};\n\n  @media ${Device.mobile} {\n    padding: 0;\n  } \n`\n\nconst RightColumn = styled(ContentColumn)`\n  flex: 1;\n  position: relative;\n`\n\nconst LeftColumn = styled(ContentColumn)`\n  flex: 2;\n`\n\nconst ImageSection = styled.div`\n\n@media ${Device.mobile}{\n  max-height: 15em;\n  margin-bottom: ${margin.normal};\n\n  .gatsby-image-wrapper{\n    max-height: 15em;\n\n    picture{\n      img{\n        max-height: 15em;\n        width: auto !important;\n        left: 50% !important;\n        right: 50% !important;\n        transform: translateX(-50%);\n      }\n    }\n  }\n}\n \n@media ${Device.desktop}{\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n\n  .gatsby-image-wrapper{\n    height: 100%;\n\n    picture{\n      img{\n        width: auto !important;\n        max-width: 100%;\n        height: auto !important;\n        max-height: 100%;\n        left: 50% !important;\n        right: 50% !important;\n        top: 50% !important;\n        transform: translate(-50%,-50%);\n      }\n    }\n  }\n}\n`\n\nconst ButtonSection = styled.div`\n  margin-top: ${margin.normal};\n  display: flex;\n  flex-direction: column;\n  gap: ${margin.small};\n`\n\nconst Button = styled(SecondaryButton)`\n  text-transform : capitalize;\n  font-weight: bold;\n  min-width: 300px;\n`\n\nconst ButtonWhiteRed = styled(Button)`\n  border-color: ${color.border.grey};\n`\n\nconst ButtonRed = styled(Button)`\n  border-color: ${color.background.red};\n`\n\nconst SingleFriend: React.FC<Friend> = ({ name, description, image, page, slug }) => {\n\n  return (\n    <WrapperContents>\n      <ColumnsLayout>\n        <RightColumn>\n          <ImageSection>\n            {image && <ResponsiveImage imageSrc={image} />}\n          </ImageSection>\n        </RightColumn>\n        <LeftColumn>\n          <TitleSection>{name}</TitleSection>\n          <Text>{description}</Text>\n          <ButtonSection>\n            <a href={page} target=\"_blank\">\n              <ButtonRed\n                label=\"Odwiedź stronę przyjaciela\"\n                color={ButtonColor.Red}\n                fontSize={fontSize.small}\n              />\n            </a>\n            {slug &&\n              <AnchorLink to={buildFriendUrl(slug, hash.friends.profit.id)}>\n                <ButtonWhiteRed\n                  label=\"Wypromuj swoją firmę\"\n                  color={ButtonColor.WhiteRed}\n                  fontSize={fontSize.small}\n                />\n              </AnchorLink>\n            }\n          </ButtonSection>\n        </LeftColumn>\n      </ColumnsLayout>\n    </WrapperContents>\n  )\n}\n\nexport default SingleFriend","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Friend } from '../../domain/friends'\nimport { margin, Device } from '../../styles/theme'\nimport SingleFriend from './SingleFriend'\nimport Friends from './Friends'\nimport { hash } from '../../domain/website'\nimport { StringParam, useQueryParams } from 'use-query-params';\nimport { useState } from 'react'\nimport { getFriendBySlug } from '../../utils/friends'\n\nconst Wrapper = styled.div`\n  margin: ${margin.small} 0;\n\n  .friends_wrapper{\n    .friends_title{\n      display: none;\n    }\n  }\n\n  @media ${Device.mobile} {\n    margin: ${margin.small} 0;\n  }\n`\ninterface IFriendsSection {\n  friends?: Friend[]\n}\n\nconst FriendsSection: React.FC<IFriendsSection> = ({ friends }) => {\n  const [query] = useQueryParams({\n    value: StringParam\n  });\n  const [friend, setFriend] = useState<Friend>()\n\n  useEffect(() => {\n    if (friends && query.value) {\n      const friend = getFriendBySlug(query.value, friends);\n      if (friend != undefined) {\n        setFriend(friend);\n      }\n    }\n  }, [friends, query]);\n\n  return (\n    <Wrapper id={hash.friends.friend.id}>\n      <Friends friends={friends} />\n      {friend && friends && <SingleFriend {...friend} />}\n    </Wrapper>\n  )\n}\n\nexport default FriendsSection","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { PageLayout } from '../layout/PageLayout';\nimport SEOMetadata from '../utils/browser/SEOMetadata';\nimport { IPolaState } from '../state/types';\nimport { LoadBrowserLocation, SelectActivePage } from '../state/app/app-actions';\nimport { hash, PageType, urls } from '../domain/website';\nimport { Text, TitleSection, WrapperSection } from '../styles/GlobalStyle.css';\nimport { PageSection } from '../layout/PageSection';\nimport { margin, padding, Device, color, fontSize } from '../styles/theme';\nimport { ResponsiveImage } from '../components/images/ResponsiveImage';\nimport Placeholder from '../components/Placeholder';\nimport { Friend } from '../domain/friends';\nimport Card from '../components/Card';\nimport FriendsSection from '../components/friends/FriendsSection';\n\nconst Wrapper = styled.div`\n  margin-top: ${margin.veryBig};\n`\n\nconst Title = styled(TitleSection)`\n  margin: ${margin.normal} 0;\n  text-align: center;\n`\n\nconst TextSection = styled(Text)`\n  margin: ${margin.big} 0;\n  text-align: center;\n`\n\nconst ImageSection = styled.ul`\n  display: flex;\n  flex-flow: row nowrap;\n  list-style: none;\n  align-items: center;\n  margin: 0 ${padding.veryBig};\n  padding: 0 ${padding.veryBig};\n\n  li {\n    flex: 1;\n    width: 100%;\n    margin: 0 ${padding.veryBig};\n\n    img {\n      width: 100%;\n    }\n  }\n\n  @media ${Device.mobile} {\n    padding: 0;\n    flex-flow: column;\n    max-width: 20em;\n    gap: ${padding.normal};\n    margin: 0 ${margin.big};\n\n    li{\n      margin: 0 ${margin.normal};\n    }\n  }\n`;\n\nconst FullWrapperInfo = styled(WrapperSection)`\n  padding: 0 ${padding.small};\n  display: flex;\n  justify-content: center;\n`\n\nconst FullContentInfo = styled.div`\n  width: 50%;\n\n  @media ${Device.mobile} {\n    width: 100%;\n  }\n`\n\nconst UlSection = styled.ul`\n  color: ${color.text.secondary};\n  font-size: ${fontSize.small};\n  margin: ${margin.small};\n  padding: ${padding.small};\n`\n\nconst WrapperInfo = styled(PageSection)`\n  display: flex;\n  padding-bottom: 0;\n  padding-top: 120px;\n  margin-top: -120px;\n\n  div{\n    flex: 1;\n  }\n\n  @media ${Device.mobile} {\n    flex-direction: column;\n    padding-right: 0;\n    padding-left: 0;\n  }\n`\n\nconst Info = styled(WrapperSection)`\n  padding: ${margin.normal} ${padding.big};\n  margin: ${margin.normal} 0;\n\n  @media ${Device.mobile} {\n    padding: ${margin.big} ${padding.small};\n    margin: ${margin.normal} 0;\n  }\n `\n\nconst TitleInfo = styled(TitleSection)`\n    @media ${Device.mobile} {\n    text-align: center;\n  }\n `\n\ninterface IFriendsPage {\n  location?: Location;\n  friends?: Friend[];\n}\n\nconst FriendsPage = (props: IFriendsPage) => {\n  const { location } = props;\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.FRIENDS));\n    }\n  }, []);\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle=\"Klub przyjaciół Poli\" />\n      <PageSection>\n        <Wrapper>\n          <Title>Partner aplikacji Pola</Title>\n          <ImageSection>\n            <li><ResponsiveImage imageSrc=\"PGE_logo.png\" /></li>\n            <li><ResponsiveImage imageSrc=\"polskie_kupuje.png\" /></li>\n          </ImageSection>\n          <TextSection>\n            Celem zainicjowanej przez Pracowników oraz Grupę Kapitałową PGE kampanii społecznej POLSKIE – KUPUJĘ TO! jest zachęcanie Polaków do kupowania rodzimych produktów i usług. W ramach tego przedsięwzięcia PGE wspiera rozwój aplikacji Pola.\n          </TextSection>\n        </Wrapper>\n      </PageSection>\n      <Placeholder text=\"Wspieramy polskie firmy - oto Przyjaciele Poli:\" />\n      <PageSection>\n        <FriendsSection friends={props.friends} />\n      </PageSection>\n      <FullWrapperInfo color={color.background.transparencyGrey}>\n        <FullContentInfo>\n          <Title>Jak rozpoznać polską firmę?</Title>\n          <Text>\n            Można to ustalić weryfikując kilka czynników. Nasz program kierowany jest do przedsiębiorstw, które spełniają poniższe kryteria:\n          </Text>\n          <UlSection>\n            <li>są zarejestrowane w Polsce;</li>\n            <li>posiadają 100% polskiego kapitału;</li>\n            <li>prowadzą produkcję na terenie naszego kraju;</li>\n            <li>tworzą wykwalifikowane miejsca pracy;</li>\n            <li>nie są częścią zagranicznego koncernu.</li>\n          </UlSection>\n          <Text>\n            Ponadto przedsiębiorstwo musi charakteryzować się nieposzlakowaną opinią na swój temat oraz aktywnie angażować się w działania podejmowane na rzecz promocji patriotyzmu gospodarczego w Polsce.\n          </Text>\n        </FullContentInfo>\n      </FullWrapperInfo>\n      <WrapperInfo id={hash.friends.profit.id}>\n        <Info color={color.background.white}>\n          <TitleInfo>Czym jest Klub Przyjaciół Poli?</TitleInfo>\n          <Text>Głównym celem Klubu Przyjaciół Poli jest promocja oraz wsparcie polskich przedsiębiorstw. Będzie to możliwe dzięki stworzeniu silnego środowiska społeczno-biznesowego, które poprzez kooperację i wspólne działania przyczyni się do popularyzacji mody na patriotyzm gospodarczy.</Text>\n          <ResponsiveImage imageSrc=\"szproty.png\" />\n        </Info>\n        <Info color={color.background.transparencyGrey}>\n          <TitleInfo>Co zyskuje przyjaciel Poli?</TitleInfo>\n          <UlSection>\n            <li>Znak Towarowy Polski produkt - 100 pkt Pola</li>\n            <Text>\n              Stworzyliśmy własne oznaczenie Polski produkt - 100 pkt Pola przeznaczone wyłącznie dla produktów, które uzyskały w naszym algorytmie maksymalny wynik 100 punktów. Będzie to tym samym pierwszy znak towarowy, którego pojawienie się na etykiecie jest poparte merytoryczną analizą danego przedsiębiorstwa.\n            </Text>\n            <Text>\n              Głównym powodem rozszerzenia naszej działalności są doświadczenia związane z oznaczeniami funkcjonującymi na polskim rynku spożywczym. W większości przypadków w sposób jednoznaczny sugerują one polskie pochodzenie produktów, chociaż po zweryfikowaniu ich producentów okazuje się, że są własnością zagranicznych podmiotów. Znak Polski produkt - 100 pkt Pola jest naszą odpowiedzią, która w formie prostego graficznego przekazu umożliwi szybką weryfikację produktu, co będzie szczególnie ważne dla osób niekorzystających z urządzeń mobilnych.\n            </Text>\n            <li> Ekspozycja informacji o firmie </li>\n            <Text>\n              Oprócz samego znaku towarowego status Przyjaciela Poli jest jednoznaczny z aktywnym udziałem w rozwoju aplikacji Pola. Zabierz ja na zakupy, którą używa już ponad 750 000 użytkowników. Informacja o firmie znajduje w specjalnych zakładkach w aplikacji oraz na naszej stronie internetowej, dzieki czemu każdy konsument może poznać historię oraz profil działalności wszystkich współpracujących z Klubem Jagiellońskim przedsiębiorstw. Dodatkowo po zeskanowaniu produktu należącego do Przyjaciela Poli użytkownik zostanie poinformowany o jego specjalnym statusie.\n            </Text>\n            <li>Działalność promocyjna oraz społeczna</li>\n            <Text>\n              Wszyscy Przyjaciele Poli mają możliwość aktywnego udziału w prowadzonych przez nas kampaniach społecznych oraz internetowych, mających na celu popularyzację polskich firm i patriotyzmu gospodarczego wśród obywateli.\n            </Text>\n          </UlSection>\n        </Info>\n      </WrapperInfo>\n      <WrapperInfo>\n        <Card\n          title=\"Dołącz do Przyjaciół Poli\"\n          content=\"Lorem ipsum dolor sit amet.\"\n          buttonLabel=\"KONTAKT\"\n          url={urls.pola.contact}\n        />\n      </WrapperInfo>\n    </PageLayout>\n  );\n};\n\nexport default connect((state: IPolaState) => ({\n  location: state.app.location,\n  friends: state.friends.data\n}), {})(FriendsPage);\n"],"sourceRoot":""}