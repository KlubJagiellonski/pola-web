{"version":3,"sources":["webpack:///./src/components/articles/ArticleHeader.tsx","webpack:///./src/components/articles/ArticleFooter.tsx","webpack:///./src/components/articles/ArticlePage.tsx","webpack:///./src/templates/ArticleTemplate.tsx","webpack:///./src/utils/dates/index.ts"],"names":["Header","styled","div","padding","big","ArticleHeader","title","subTitle","date","getDate","Footer","ArticleFooter","slug","author","facebook","Content","props","html","children","dangerouslySetInnerHTML","__html","connect","state","location","app","article","frontmatter","fields","prefix","dispatch","useDispatch","React","useEffect","LoadBrowserLocation","SelectActivePage","PageType","ARTICLE","PageLayout","SEOMetadata","pageTitle","PageSection","size","styles","backgroundColor","color","background","secondary","textColor","text","dark","ArticleTemplate","data","pageContext","post","dateObj","Date","month","Object","values","Month","getMonth","getFullYear"],"mappings":"wRAKMA,EAASC,IAAOC,IAAV,4EAAGD,CAAH,2FAKCE,IAAQC,KASRC,EAA0C,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,KAApB,OACrD,kBAACR,EAAD,KACE,4BAAKM,GACL,4BAAKC,GACL,6BAAME,YAAQD,MCnBZE,EAAST,IAAOC,IAAV,4EAAGD,CAAH,2FAKCE,IAAQC,KASRO,EAA0C,SAAC,GAA+B,EAA7BC,KAA6B,EAAvBC,OAAuB,EAAfC,SACtE,OAAO,kBAACJ,EAAD,gBCLHK,EAAU,SAACC,GACf,IAAQC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SAEd,OAAID,EACK,yBAAKE,wBAAyB,CAAEC,OAAQH,KAExC,6BAAMC,IA0CFG,qBAAQ,SAACC,GAAD,MAAwB,CAAEC,SAAUD,EAAME,IAAID,YAAa,GAAnEF,EA9BK,SAACL,GACnB,IAAQO,EAA8CP,EAA9CO,SAAUE,EAAoCT,EAApCS,QAASZ,EAA2BG,EAA3BH,OAAQD,EAAmBI,EAAnBJ,KAAME,EAAaE,EAAbF,SACnCR,IAAUmB,GAAW,IAAIC,aAAe,IAAIpB,MAC5CC,IAAakB,GAAW,IAAIC,aAAe,IAAInB,SAC/CC,IAASiB,GAAW,IAAIE,QAAU,IAAIC,OACtCX,GAAQQ,GAAW,IAAIR,KAEvBY,EAAWC,wBASjB,OAPAC,IAAMC,WAAU,WACVT,IACFM,EAASI,YAAoBV,IAC7BM,EAASK,YAAiBC,IAASC,aAEpC,IAGD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,UAAS,cAAgBjC,IACtC,kBAACkC,EAAA,EAAD,CAAaC,KAAK,OAAOC,OAAQ,CAAEC,gBAAiBC,IAAMC,WAAWC,UAAWC,UAAWH,IAAMI,KAAKC,OACpG,kBAAC,EAAD,CAAe3C,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,KAEzD,kBAACgC,EAAA,EAAD,KACE,kBAAC,EAAD,CAASvB,KAAMA,IACf,kBAAC,EAAD,CAAeL,KAAMA,EAAMC,OAAQA,EAAQC,SAAUA,SC/ChDoC,EAA8C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OACzD,kBAAC,EAAD,CAAa3B,QAAS0B,EAAKE,KAAMzC,KAAMwC,EAAYxC,QAGtCsC,a,kCCbR,SAASzC,EAAQD,GACtB,IAAM8C,EAAU,IAAIC,KAAK/C,GACnBgD,EAAQC,OAAOC,OAAOC,GAG5B,OAFsBL,EAAQ7C,UAAd,IAA2B+C,EAAMF,EAAQM,YAAzC,IAAwDN,EAAQO,c,IAK7EF,EARL,kC,SAQKA,K,mBAAAA,E,kBAAAA,E,cAAAA,E,iBAAAA,E,WAAAA,E,eAAAA,E,aAAAA,E,kBAAAA,E,qBAAAA,E,uBAAAA,E,qBAAAA,E,oBAAAA,M","file":"component---src-templates-article-template-tsx-26f1812e1bf32c980d8f.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { padding } from '../../styles/theme';\nimport { getDate } from '../../utils/dates';\n\nconst Header = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  padding: ${padding.big} 0;\n`;\n\ninterface IArticleHeader {\n  title: string;\n  subTitle: string;\n  date: string;\n}\n\nexport const ArticleHeader: React.FC<IArticleHeader> = ({ title, subTitle, date }) => (\n  <Header>\n    <h1>{title}</h1>\n    <h2>{subTitle}</h2>\n    <div>{getDate(date)}</div>\n  </Header>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { padding } from '../../styles/theme';\n\nconst Footer = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  padding: ${padding.big} 0;\n`;\n\ninterface IArticleFooter {\n  author?: any;\n  slug?: string;\n  facebook?: any;\n}\n\nexport const ArticleFooter: React.FC<IArticleFooter> = ({ slug, author, facebook }) => {\n  return <Footer>Footer</Footer>;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect, useDispatch } from 'react-redux';\n\nimport { PageLayout } from '../../layout/PageLayout';\nimport SEOMetadata from '../../utils/browser/SEOMetadata';\nimport { IPolaState } from '../../state/types';\nimport { LoadBrowserLocation, SelectActivePage } from '../../state/app/app-actions';\nimport { PageType } from '../../domain/website';\nimport { PageSection } from '../../layout/PageSection';\nimport { color } from '../../styles/theme';\nimport { ArticleHeader } from './ArticleHeader';\nimport { ArticleFooter } from './ArticleFooter';\n\nconst Content = (props: any) => {\n  const { html, children } = props;\n\n  if (html) {\n    return <div dangerouslySetInnerHTML={{ __html: html }} />;\n  } else {\n    return <div>{children}</div>;\n  }\n};\n\ninterface IArticlePage {\n  location?: Location;\n  article: any;\n  author?: any;\n  slug?: string;\n  facebook?: any;\n}\n\nconst ArticlePage = (props: IArticlePage) => {\n  const { location, article, author, slug, facebook } = props;\n  const title = ((article || {}).frontmatter || {}).title;\n  const subTitle = ((article || {}).frontmatter || {}).subTitle;\n  const date = ((article || {}).fields || {}).prefix;\n  const html = (article || {}).html;\n\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (location) {\n      dispatch(LoadBrowserLocation(location));\n      dispatch(SelectActivePage(PageType.ARTICLE));\n    }\n  }, []);\n\n  return (\n    <PageLayout>\n      <SEOMetadata pageTitle={`Pola Web | ${title}`} />\n      <PageSection size=\"full\" styles={{ backgroundColor: color.background.secondary, textColor: color.text.dark }}>\n        <ArticleHeader title={title} subTitle={subTitle} date={date} />\n      </PageSection>\n      <PageSection>\n        <Content html={html} />\n        <ArticleFooter slug={slug} author={author} facebook={facebook} />\n      </PageSection>\n    </PageLayout>\n  );\n};\n\nexport default connect((state: IPolaState) => ({ location: state.app.location }), {})(ArticlePage);\n","import React from 'react';\nimport ArticlePage from '../components/articles/ArticlePage';\nimport { graphql } from 'gatsby';\n\ninterface IArticleTemplate {\n  data: any;\n  pageContext: any;\n}\n\nexport const ArticleTemplate: React.FC<IArticleTemplate> = ({ data, pageContext }) => (\n  <ArticlePage article={data.post} slug={pageContext.slug as string} />\n);\n\nexport default ArticleTemplate;\n\n//eslint-disable-next-line no-undef\nexport const postQuery = graphql`\n  query PostBySlug($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      htmlAst\n      fields {\n        slug\n        prefix\n      }\n      frontmatter {\n        title\n        subTitle\n        cover {\n          childImageSharp {\n            resize(width: 300) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export function getDate(date: string) {\n  const dateObj = new Date(date);\n  const month = Object.values(Month);\n  const dateToShow = `${dateObj.getDate()} ${month[dateObj.getMonth()]} ${dateObj.getFullYear()}`;\n\n  return dateToShow;\n}\n\nenum Month {\n  JANUARY = 'stycznia',\n  FEBRUARY = 'lutego',\n  MARCH = 'marca',\n  APRIL = 'kwietnia',\n  MAY = 'maja',\n  JUNE = 'czerwca',\n  JULY = 'lipca',\n  AUGUST = 'sierpnia',\n  SEPTEMBER = 'września',\n  OCTOBER = 'października',\n  NOVEMBER = 'listopada',\n  DECEMBER = 'grudnia',\n}\n"],"sourceRoot":""}